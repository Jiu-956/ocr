{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"results\"\n};\nconst _hoisted_2 = {\n  class: \"display-section\"\n};\nconst _hoisted_3 = {\n  class: \"split-view\"\n};\nconst _hoisted_4 = {\n  class: \"pdf-panel\"\n};\nconst _hoisted_5 = {\n  class: \"panel-header\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"page-controls\"\n};\nconst _hoisted_7 = [\"disabled\"];\nconst _hoisted_8 = [\"disabled\"];\nconst _hoisted_9 = {\n  class: \"pdf-container\"\n};\nconst _hoisted_10 = [\"src\"];\nconst _hoisted_11 = {\n  key: 1,\n  class: \"no-pdf\"\n};\nconst _hoisted_12 = {\n  class: \"latex-panel\"\n};\nconst _hoisted_13 = {\n  class: \"panel-header\"\n};\nconst _hoisted_14 = {\n  class: \"latex-controls\"\n};\nconst _hoisted_15 = {\n  class: \"latex-output\"\n};\nconst _hoisted_16 = [\"onMouseenter\", \"onClick\"];\nconst _hoisted_17 = {\n  class: \"line-number\"\n};\nconst _hoisted_18 = {\n  class: \"line-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" PDF和LaTeX显示区域 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" 左侧PDF预览 \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"PDF预览\", -1 /* CACHED */)), $setup.pdfUrl && $setup.totalPages > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.prevPage && $setup.prevPage(...args)),\n    disabled: $setup.currentPage <= 1\n  }, \"上一页\", 8 /* PROPS */, _hoisted_7), _createElementVNode(\"span\", null, \"第 \" + _toDisplayString($setup.currentPage) + \" 页 / 共 \" + _toDisplayString($setup.totalPages) + \" 页\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.nextPage && $setup.nextPage(...args)),\n    disabled: $setup.currentPage >= $setup.totalPages\n  }, \"下一页\", 8 /* PROPS */, _hoisted_8)])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_9, [$setup.pdfUrl ? (_openBlock(), _createElementBlock(\"iframe\", {\n    key: 0,\n    src: `${$setup.pdfUrl}#page=${$setup.currentPage}`,\n    class: \"pdf-iframe\",\n    frameborder: \"0\",\n    onLoad: _cache[2] || (_cache[2] = (...args) => $setup.onPdfLoad && $setup.onPdfLoad(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_10)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_cache[8] || (_cache[8] = _createElementVNode(\"p\", null, \"未找到PDF文件\", -1 /* CACHED */)), _createVNode(_component_router_link, {\n    to: \"/\",\n    class: \"back-link\"\n  }, {\n    default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"返回首页上传\")])),\n    _: 1 /* STABLE */,\n    __: [7]\n  })]))])]), _createCommentVNode(\" 右侧LaTeX输出 \"), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_cache[9] || (_cache[9] = _createElementVNode(\"h3\", null, \"Nougat LaTeX 输出\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.copyLaTeX && $setup.copyLaTeX(...args)),\n    class: \"copy-btn\"\n  }, \"复制全部\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $setup.downloadLaTeX && $setup.downloadLaTeX(...args)),\n    class: \"download-btn\"\n  }, \"下载\")])]), _createElementVNode(\"div\", _hoisted_15, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.latexLines, (line, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"latex-line\", {\n        'highlighted': $setup.hoveredLine === index,\n        'active': $setup.activeLine === index\n      }]),\n      onMouseenter: $event => $setup.handleLineHover(index),\n      onMouseleave: _cache[5] || (_cache[5] = (...args) => $setup.handleLineLeave && $setup.handleLineLeave(...args)),\n      onClick: $event => $setup.handleLineClick(index)\n    }, [_createElementVNode(\"span\", _hoisted_17, _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_18, _toDisplayString(line), 1 /* TEXT */)], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_16);\n  }), 128 /* KEYED_FRAGMENT */))])])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","$setup","pdfUrl","totalPages","_hoisted_6","onClick","_cache","args","prevPage","disabled","currentPage","_hoisted_7","_toDisplayString","nextPage","_hoisted_8","_hoisted_9","src","frameborder","onLoad","onPdfLoad","_hoisted_11","_createVNode","_component_router_link","to","_hoisted_12","_hoisted_13","_hoisted_14","copyLaTeX","downloadLaTeX","_hoisted_15","_Fragment","_renderList","latexLines","line","index","key","_normalizeClass","hoveredLine","activeLine","onMouseenter","$event","handleLineHover","onMouseleave","handleLineLeave","handleLineClick","_hoisted_17","_hoisted_18"],"sources":["D:\\OCR\\ocr\\src\\views\\Results.vue"],"sourcesContent":["<template>\r\n  <div class=\"results\">\r\n    <!-- PDF和LaTeX显示区域 -->\r\n    <div class=\"display-section\">\r\n      <div class=\"split-view\">\r\n        <!-- 左侧PDF预览 -->\r\n        <div class=\"pdf-panel\">\r\n          <div class=\"panel-header\">\r\n            <h3>PDF预览</h3>\r\n            <div class=\"page-controls\" v-if=\"pdfUrl && totalPages > 0\">\r\n              <button @click=\"prevPage\" :disabled=\"currentPage <= 1\">上一页</button>\r\n              <span>第 {{ currentPage }} 页 / 共 {{ totalPages }} 页</span>\r\n              <button @click=\"nextPage\" :disabled=\"currentPage >= totalPages\">下一页</button>\r\n            </div>\r\n          </div>\r\n          <div class=\"pdf-container\">\r\n            <iframe\r\n              v-if=\"pdfUrl\"\r\n              :src=\"`${pdfUrl}#page=${currentPage}`\"\r\n              class=\"pdf-iframe\"\r\n              frameborder=\"0\"\r\n              @load=\"onPdfLoad\"\r\n            ></iframe>\r\n            <div v-else class=\"no-pdf\">\r\n              <p>未找到PDF文件</p>\r\n              <router-link to=\"/\" class=\"back-link\">返回首页上传</router-link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 右侧LaTeX输出 -->\r\n        <div class=\"latex-panel\">\r\n          <div class=\"panel-header\">\r\n            <h3>Nougat LaTeX 输出</h3>\r\n            <div class=\"latex-controls\">\r\n              <button @click=\"copyLaTeX\" class=\"copy-btn\">复制全部</button>\r\n              <button @click=\"downloadLaTeX\" class=\"download-btn\">下载</button>\r\n            </div>\r\n          </div>\r\n          <div class=\"latex-output\">\r\n            <div\r\n              v-for=\"(line, index) in latexLines\"\r\n              :key=\"index\"\r\n              class=\"latex-line\"\r\n              :class=\"{ \r\n                'highlighted': hoveredLine === index,\r\n                'active': activeLine === index\r\n              }\"\r\n              @mouseenter=\"handleLineHover(index)\"\r\n              @mouseleave=\"handleLineLeave\"\r\n              @click=\"handleLineClick(index)\"\r\n            >\r\n              <span class=\"line-number\">{{ index + 1 }}</span>\r\n              <span class=\"line-content\">{{ line }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed, ref } from 'vue';\r\nimport { useStore } from 'vuex';\r\n\r\nexport default {\r\n  name: 'OcrResults',\r\n  setup() {\r\n    const store = useStore();\r\n    const currentPage = ref(1);\r\n    const totalPages = ref(5); // 默认值，实际应从API获取\r\n    const hoveredLine = ref(null);\r\n    const activeLine = ref(null);\r\n\r\n    // 从Vuex获取上传的PDF信息\r\n    const pdfUrl = computed(() => {\r\n      const url = store.state.ocrResults?.pdfUrl;\r\n      console.log('pdfUrl from store:', url); // 调试日志\r\n      return url || '';\r\n    });\r\n    \r\n    const latexText = computed(() => store.state.ocrResults?.text || '');\r\n    const fileName = computed(() => store.state.ocrResults?.fileName || '');\r\n\r\n    // LaTeX按行拆分\r\n    const latexLines = computed(() => {\r\n      if (!latexText.value) {\r\n        // 如果没有从store获取到数据，使用图片中的示例数据\r\n        return [\r\n          '\\\\documentclass{article}',\r\n          '\\\\usepackage{amsmath}',\r\n          '\\\\usepackage{amssymb}',\r\n          '\\\\begin{document}',\r\n          '\\\\title{OCR智能平台技术文档}',\r\n          '\\\\author{OCR Team}',\r\n          '\\\\date{\\\\today}',\r\n          '\\\\maketitle',\r\n          '',\r\n          '# Nougat: Neural Optical Understanding for Academic Documents',\r\n          'Lukas Blecher',\r\n          'Guillem Cucurull',\r\n          'Thomas Scialom',\r\n          'Robert Stojnic',\r\n          'Meta AI'\r\n        ];\r\n      }\r\n      return latexText.value.split('\\n').filter(line => line.trim() !== '');\r\n    });\r\n\r\n    // PDF加载完成回调\r\n    const onPdfLoad = () => {\r\n      console.log('PDF加载完成');\r\n      // 这里可以获取PDF的总页数\r\n      // 注意：iframe方式无法直接获取总页数，需要后端API支持\r\n    };\r\n\r\n    // 鼠标悬停处理\r\n    const handleLineHover = (lineIndex) => {\r\n      hoveredLine.value = lineIndex;\r\n      scrollToCorrespondingPosition(lineIndex);\r\n    };\r\n\r\n    const handleLineLeave = () => {\r\n      hoveredLine.value = null;\r\n    };\r\n\r\n    const handleLineClick = (lineIndex) => {\r\n      activeLine.value = lineIndex;\r\n      scrollToCorrespondingPosition(lineIndex);\r\n    };\r\n\r\n    // 滚动到对应位置\r\n    const scrollToCorrespondingPosition = (lineIndex) => {\r\n      // 简单的页面映射逻辑：每10行对应一页\r\n      const targetPage = Math.floor(lineIndex / 10) + 1;\r\n      if (targetPage >= 1 && targetPage <= totalPages.value) {\r\n        currentPage.value = targetPage;\r\n      }\r\n    };\r\n\r\n    // 页面导航\r\n    const prevPage = () => {\r\n      if (currentPage.value > 1) {\r\n        currentPage.value--;\r\n      }\r\n    };\r\n\r\n    const nextPage = () => {\r\n      if (currentPage.value < totalPages.value) {\r\n        currentPage.value++;\r\n      }\r\n    };\r\n\r\n    // 复制LaTeX\r\n    const copyLaTeX = () => {\r\n      const text = latexLines.value.join('\\n');\r\n      navigator.clipboard.writeText(text).then(() => {\r\n        alert('LaTeX内容已复制到剪贴板');\r\n      }).catch(() => {\r\n        // 备用方案\r\n        const textArea = document.createElement('textarea');\r\n        textArea.value = text;\r\n        document.body.appendChild(textArea);\r\n        textArea.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(textArea);\r\n        alert('LaTeX内容已复制到剪贴板');\r\n      });\r\n    };\r\n\r\n    // 下载LaTeX\r\n    const downloadLaTeX = () => {\r\n      const text = latexLines.value.join('\\n');\r\n      const blob = new Blob([text], { type: 'text/plain' });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = fileName.value ? `${fileName.value.replace('.pdf', '')}.tex` : 'output.tex';\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      URL.revokeObjectURL(url);\r\n    };\r\n\r\n    return {\r\n      pdfUrl,\r\n      latexLines,\r\n      currentPage,\r\n      totalPages,\r\n      hoveredLine,\r\n      activeLine,\r\n      onPdfLoad,\r\n      handleLineHover,\r\n      handleLineLeave,\r\n      handleLineClick,\r\n      prevPage,\r\n      nextPage,\r\n      copyLaTeX,\r\n      downloadLaTeX\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.results {\r\n  padding: 20px;\r\n  min-height: calc(100vh - 140px);\r\n}\r\n\r\n.display-section {\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 20px rgba(0,0,0,0.1);\r\n  overflow: hidden;\r\n}\r\n\r\n.split-view {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  height: 600px;\r\n}\r\n\r\n.pdf-panel, .latex-panel {\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-right: 1px solid #eee;\r\n}\r\n\r\n.latex-panel {\r\n  border-right: none;\r\n}\r\n\r\n.panel-header {\r\n  padding: 1rem 1.5rem;\r\n  background: #f8f9fa;\r\n  border-bottom: 1px solid #eee;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.panel-header h3 {\r\n  color: #2c3e50;\r\n  font-size: 1.1rem;\r\n  margin: 0;\r\n}\r\n\r\n.page-controls, .latex-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.page-controls button, .copy-btn, .download-btn {\r\n  padding: 0.5rem 1rem;\r\n  border: 1px solid #ddd;\r\n  background: white;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.page-controls button:hover:not(:disabled), \r\n.copy-btn:hover, \r\n.download-btn:hover {\r\n  background: #667eea;\r\n  color: white;\r\n  border-color: #667eea;\r\n}\r\n\r\n.page-controls button:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.pdf-container {\r\n  flex: 1;\r\n  overflow: auto;\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.pdf-iframe {\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 500px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n}\r\n\r\n.no-pdf {\r\n  text-align: center;\r\n  color: #666;\r\n}\r\n\r\n.back-link {\r\n  color: #667eea;\r\n  text-decoration: none;\r\n  margin-top: 1rem;\r\n  display: inline-block;\r\n}\r\n\r\n.back-link:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.latex-output {\r\n  flex: 1;\r\n  overflow: auto;\r\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\r\n  font-size: 13px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.latex-line {\r\n  padding: 4px 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-left: 3px solid transparent;\r\n  transition: all 0.2s ease;\r\n  cursor: pointer;\r\n}\r\n\r\n.latex-line:hover {\r\n  background: #f8f9fa;\r\n}\r\n\r\n.latex-line.highlighted {\r\n  background: #e3f2fd;\r\n  border-left-color: #2196f3;\r\n}\r\n\r\n.latex-line.active {\r\n  background: #bbdefb;\r\n  border-left-color: #1976d2;\r\n}\r\n\r\n.line-number {\r\n  min-width: 40px;\r\n  color: #7f8c8d;\r\n  font-size: 11px;\r\n  user-select: none;\r\n}\r\n\r\n.line-content {\r\n  flex: 1;\r\n  white-space: pre-wrap;\r\n  word-break: break-all;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .split-view {\r\n    grid-template-columns: 1fr;\r\n    height: auto;\r\n  }\r\n  \r\n  .pdf-panel, .latex-panel {\r\n    height: 400px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}