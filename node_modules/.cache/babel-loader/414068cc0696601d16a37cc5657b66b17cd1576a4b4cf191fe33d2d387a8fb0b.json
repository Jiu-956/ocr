{"ast":null,"code":"export default {\n  name: 'PdfSplitter',\n  data() {\n    return {\n      pdfFile: null,\n      pdfName: '',\n      fileSize: '',\n      pageInput: '',\n      processing: false,\n      errorMsg: '',\n      successMsg: ''\n    };\n  },\n  methods: {\n    onFileChange(e) {\n      this.clearMessages();\n      const file = e.target.files[0];\n      if (!file) return;\n      if (file.type !== 'application/pdf') {\n        this.errorMsg = '请选择PDF文件';\n        return;\n      }\n      this.pdfFile = file;\n      this.pdfName = file.name;\n      this.fileSize = this.formatFileSize(file.size);\n    },\n    formatFileSize(bytes) {\n      if (bytes === 0) return '0 Bytes';\n      const k = 1024;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    },\n    async processPdf() {\n      this.clearMessages();\n      if (!this.pdfFile) {\n        this.errorMsg = '请先上传PDF文件';\n        return;\n      }\n      if (!this.pageInput.trim()) {\n        this.errorMsg = '请输入页面范围';\n        return;\n      }\n      this.processing = true;\n\n      // 模拟处理过程\n      setTimeout(() => {\n        this.processing = false;\n        this.successMsg = 'PDF切割请求已提交！实际功能需要后端支持，这里仅为演示界面。';\n\n        // 模拟文件下载\n        setTimeout(() => {\n          this.downloadDemo();\n        }, 1000);\n      }, 2000);\n    },\n    downloadDemo() {\n      // 创建一个模拟的下载链接\n      const link = document.createElement('a');\n      link.href = '#';\n      link.download = `split_${this.pdfName}`;\n      link.click();\n      this.successMsg += ' 实际项目中，这里会下载处理后的PDF文件。';\n    },\n    reset() {\n      this.pdfFile = null;\n      this.pdfName = '';\n      this.fileSize = '';\n      this.pageInput = '';\n      this.clearMessages();\n\n      // 清除文件输入\n      const fileInput = document.querySelector('.file-input');\n      if (fileInput) {\n        fileInput.value = '';\n      }\n    },\n    clearMessages() {\n      this.errorMsg = '';\n      this.successMsg = '';\n    }\n  }\n};","map":{"version":3,"names":["name","data","pdfFile","pdfName","fileSize","pageInput","processing","errorMsg","successMsg","methods","onFileChange","e","clearMessages","file","target","files","type","formatFileSize","size","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","processPdf","trim","setTimeout","downloadDemo","link","document","createElement","href","download","click","reset","fileInput","querySelector","value"],"sources":["D:\\OCR\\ocr\\src\\views\\PdfSplitter.vue"],"sourcesContent":["<template>\r\n  <div class=\"pdf-splitter-page\">\r\n    <div class=\"splitter-container\">\r\n      <h2>📄 PDF切割工具</h2>\r\n      <p>上传PDF文件，选择需要保留的页面，导出为新PDF。</p>\r\n      \r\n      <div class=\"splitter-card\">\r\n        <div class=\"upload-section\">\r\n          <h3>📤 上传PDF文件</h3>\r\n          <input \r\n            type=\"file\" \r\n            accept=\"application/pdf\" \r\n            @change=\"onFileChange\"\r\n            class=\"file-input\"\r\n          />\r\n          <div v-if=\"pdfName\" class=\"pdf-info\">\r\n            <span class=\"file-icon\">📄</span>\r\n            <div class=\"file-details\">\r\n              <span class=\"file-name\">{{ pdfName }}</span>\r\n              <span class=\"file-size\">{{ fileSize }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"pdfFile\" class=\"page-select-section\">\r\n          <h3>✂️ 选择页面范围</h3>\r\n          <div class=\"input-group\">\r\n            <label>输入页面范围（用逗号分隔，如：1,3,5-7）：</label>\r\n            <input \r\n              v-model=\"pageInput\" \r\n              placeholder=\"例如：1,2,4-6\"\r\n              class=\"page-input\"\r\n            />\r\n          </div>\r\n          <div class=\"action-buttons\">\r\n            <button @click=\"processPdf\" :disabled=\"processing\" class=\"process-btn\">\r\n              <span v-if=\"processing\">⏳ 处理中...</span>\r\n              <span v-else>🔄 开始切割</span>\r\n            </button>\r\n            <button @click=\"reset\" class=\"reset-btn\">🔄 重置</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"errorMsg\" class=\"error-msg\">\r\n          ❌ {{ errorMsg }}\r\n        </div>\r\n\r\n        <div v-if=\"successMsg\" class=\"success-msg\">\r\n          ✅ {{ successMsg }}\r\n        </div>\r\n\r\n        <div class=\"info-section\">\r\n          <h3>💡 使用说明</h3>\r\n          <ul>\r\n            <li>支持标准PDF文件格式</li>\r\n            <li>页面范围格式：1,3,5-7（表示第1页、第3页、第5到7页）</li>\r\n            <li>处理完成后将自动下载新的PDF文件</li>\r\n            <li>目前为演示版本，实际切割功能需要后端支持</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'PdfSplitter',\r\n  data() {\r\n    return {\r\n      pdfFile: null,\r\n      pdfName: '',\r\n      fileSize: '',\r\n      pageInput: '',\r\n      processing: false,\r\n      errorMsg: '',\r\n      successMsg: ''\r\n    }\r\n  },\r\n  methods: {\r\n    onFileChange(e) {\r\n      this.clearMessages();\r\n      const file = e.target.files[0];\r\n      if (!file) return;\r\n      \r\n      if (file.type !== 'application/pdf') {\r\n        this.errorMsg = '请选择PDF文件';\r\n        return;\r\n      }\r\n      \r\n      this.pdfFile = file;\r\n      this.pdfName = file.name;\r\n      this.fileSize = this.formatFileSize(file.size);\r\n    },\r\n    \r\n    formatFileSize(bytes) {\r\n      if (bytes === 0) return '0 Bytes';\r\n      const k = 1024;\r\n      const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    },\r\n    \r\n    async processPdf() {\r\n      this.clearMessages();\r\n      \r\n      if (!this.pdfFile) {\r\n        this.errorMsg = '请先上传PDF文件';\r\n        return;\r\n      }\r\n      \r\n      if (!this.pageInput.trim()) {\r\n        this.errorMsg = '请输入页面范围';\r\n        return;\r\n      }\r\n      \r\n      this.processing = true;\r\n      \r\n      // 模拟处理过程\r\n      setTimeout(() => {\r\n        this.processing = false;\r\n        this.successMsg = 'PDF切割请求已提交！实际功能需要后端支持，这里仅为演示界面。';\r\n        \r\n        // 模拟文件下载\r\n        setTimeout(() => {\r\n          this.downloadDemo();\r\n        }, 1000);\r\n      }, 2000);\r\n    },\r\n    \r\n    downloadDemo() {\r\n      // 创建一个模拟的下载链接\r\n      const link = document.createElement('a');\r\n      link.href = '#';\r\n      link.download = `split_${this.pdfName}`;\r\n      link.click();\r\n      \r\n      this.successMsg += ' 实际项目中，这里会下载处理后的PDF文件。';\r\n    },\r\n    \r\n    reset() {\r\n      this.pdfFile = null;\r\n      this.pdfName = '';\r\n      this.fileSize = '';\r\n      this.pageInput = '';\r\n      this.clearMessages();\r\n      \r\n      // 清除文件输入\r\n      const fileInput = document.querySelector('.file-input');\r\n      if (fileInput) {\r\n        fileInput.value = '';\r\n      }\r\n    },\r\n    \r\n    clearMessages() {\r\n      this.errorMsg = '';\r\n      this.successMsg = '';\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.pdf-splitter-page {\r\n  background: white;\r\n  min-height: 70vh;\r\n  padding: 2rem 0;\r\n}\r\n\r\n.splitter-container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 0 2rem;\r\n}\r\n\r\n.splitter-container h2 {\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  font-size: 2.2rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.splitter-container > p {\r\n  text-align: center;\r\n  color: #7f8c8d;\r\n  font-size: 1.1rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.splitter-card {\r\n  background: #f8f9fa;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.08);\r\n  padding: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n}\r\n\r\n.upload-section, .page-select-section, .info-section {\r\n  background: white;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.05);\r\n}\r\n\r\n.upload-section h3, .page-select-section h3, .info-section h3 {\r\n  color: #2c3e50;\r\n  margin-bottom: 1rem;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n.file-input {\r\n  width: 100%;\r\n  padding: 0.8rem;\r\n  border: 2px dashed #d1d5db;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  background: #fafbfc;\r\n}\r\n\r\n.file-input:hover {\r\n  border-color: #667eea;\r\n  background: #f0f4ff;\r\n}\r\n\r\n.pdf-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  margin-top: 1rem;\r\n  padding: 1rem;\r\n  background: #e8f5e8;\r\n  border-radius: 8px;\r\n}\r\n\r\n.file-icon {\r\n  font-size: 2rem;\r\n}\r\n\r\n.file-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.3rem;\r\n}\r\n\r\n.file-name {\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n}\r\n\r\n.file-size {\r\n  font-size: 0.9rem;\r\n  color: #7f8c8d;\r\n}\r\n\r\n.input-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.input-group label {\r\n  color: #2c3e50;\r\n  font-weight: 500;\r\n}\r\n\r\n.page-input {\r\n  padding: 0.8rem;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 6px;\r\n  font-size: 1rem;\r\n  transition: border-color 0.3s ease;\r\n}\r\n\r\n.page-input:focus {\r\n  outline: none;\r\n  border-color: #667eea;\r\n  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.process-btn, .reset-btn {\r\n  padding: 0.8rem 1.5rem;\r\n  border: none;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.process-btn {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n  flex: 1;\r\n}\r\n\r\n.process-btn:hover:not(:disabled) {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\r\n}\r\n\r\n.process-btn:disabled {\r\n  background: #bdc3c7;\r\n  cursor: not-allowed;\r\n  transform: none;\r\n}\r\n\r\n.reset-btn {\r\n  background: #95a5a6;\r\n  color: white;\r\n}\r\n\r\n.reset-btn:hover {\r\n  background: #7f8c8d;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.error-msg {\r\n  background: #fee2e2;\r\n  color: #991b1b;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  border: 1px solid #fecaca;\r\n}\r\n\r\n.success-msg {\r\n  background: #d1fae5;\r\n  color: #065f46;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  border: 1px solid #a7f3d0;\r\n}\r\n\r\n.info-section ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.info-section li {\r\n  padding: 0.5rem 0;\r\n  color: #2c3e50;\r\n  border-bottom: 1px solid #ecf0f1;\r\n}\r\n\r\n.info-section li:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.info-section li:before {\r\n  content: \"💡 \";\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .splitter-container {\r\n    padding: 0 1rem;\r\n  }\r\n  \r\n  .splitter-card {\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .action-buttons {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .splitter-container h2 {\r\n    font-size: 1.8rem;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}