{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { computed, ref } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'OcrResults',\n  setup() {\n    const store = useStore();\n    const currentPage = ref(1);\n    const totalPages = ref(5); // 默认值，实际应从API获取\n    const hoveredLine = ref(null);\n    const activeLine = ref(null);\n\n    // 从Vuex获取上传的PDF信息\n    const pdfUrl = computed(() => {\n      const url = store.state.ocrResults?.pdfUrl;\n      console.log('pdfUrl from store:', url); // 调试日志\n      return url || '';\n    });\n    const latexText = computed(() => store.state.ocrResults?.text || '');\n    const fileName = computed(() => store.state.ocrResults?.fileName || '');\n\n    // LaTeX按行拆分\n    const latexLines = computed(() => {\n      if (!latexText.value) {\n        // 如果没有从store获取到数据，使用图片中的示例数据\n        return ['\\\\documentclass{article}', '\\\\usepackage{amsmath}', '\\\\usepackage{amssymb}', '\\\\begin{document}', '\\\\title{OCR智能平台技术文档}', '\\\\author{OCR Team}', '\\\\date{\\\\today}', '\\\\maketitle', '', '# Nougat: Neural Optical Understanding for Academic Documents', 'Lukas Blecher', 'Guillem Cucurull', 'Thomas Scialom', 'Robert Stojnic', 'Meta AI'];\n      }\n      return latexText.value.split('\\n').filter(line => line.trim() !== '');\n    });\n\n    // PDF加载完成回调\n    const onPdfLoad = () => {\n      console.log('PDF加载完成');\n      // 这里可以获取PDF的总页数\n      // 注意：iframe方式无法直接获取总页数，需要后端API支持\n    };\n\n    // 鼠标悬停处理\n    const handleLineHover = lineIndex => {\n      hoveredLine.value = lineIndex;\n      scrollToCorrespondingPosition(lineIndex);\n    };\n    const handleLineLeave = () => {\n      hoveredLine.value = null;\n    };\n    const handleLineClick = lineIndex => {\n      activeLine.value = lineIndex;\n      scrollToCorrespondingPosition(lineIndex);\n    };\n\n    // 滚动到对应位置\n    const scrollToCorrespondingPosition = lineIndex => {\n      // 简单的页面映射逻辑：每10行对应一页\n      const targetPage = Math.floor(lineIndex / 10) + 1;\n      if (targetPage >= 1 && targetPage <= totalPages.value) {\n        currentPage.value = targetPage;\n      }\n    };\n\n    // 页面导航\n    const prevPage = () => {\n      if (currentPage.value > 1) {\n        currentPage.value--;\n      }\n    };\n    const nextPage = () => {\n      if (currentPage.value < totalPages.value) {\n        currentPage.value++;\n      }\n    };\n\n    // 复制LaTeX\n    const copyLaTeX = () => {\n      const text = latexLines.value.join('\\n');\n      navigator.clipboard.writeText(text).then(() => {\n        alert('LaTeX内容已复制到剪贴板');\n      }).catch(() => {\n        // 备用方案\n        const textArea = document.createElement('textarea');\n        textArea.value = text;\n        document.body.appendChild(textArea);\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n        alert('LaTeX内容已复制到剪贴板');\n      });\n    };\n\n    // 下载LaTeX\n    const downloadLaTeX = () => {\n      const text = latexLines.value.join('\\n');\n      const blob = new Blob([text], {\n        type: 'text/plain'\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = fileName.value ? `${fileName.value.replace('.pdf', '')}.tex` : 'output.tex';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    };\n    return {\n      pdfUrl,\n      latexLines,\n      currentPage,\n      totalPages,\n      hoveredLine,\n      activeLine,\n      onPdfLoad,\n      handleLineHover,\n      handleLineLeave,\n      handleLineClick,\n      prevPage,\n      nextPage,\n      copyLaTeX,\n      downloadLaTeX\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","useStore","name","setup","store","currentPage","totalPages","hoveredLine","activeLine","pdfUrl","url","state","ocrResults","console","log","latexText","text","fileName","latexLines","value","split","filter","line","trim","onPdfLoad","handleLineHover","lineIndex","scrollToCorrespondingPosition","handleLineLeave","handleLineClick","targetPage","Math","floor","prevPage","nextPage","copyLaTeX","join","navigator","clipboard","writeText","then","alert","catch","textArea","document","createElement","body","appendChild","select","execCommand","removeChild","downloadLaTeX","blob","Blob","type","URL","createObjectURL","a","href","download","replace","click","revokeObjectURL"],"sources":["D:\\OCR\\ocr\\src\\views\\Results.vue"],"sourcesContent":["<template>\r\n  <div class=\"results\">\r\n    <!-- PDF和LaTeX显示区域 -->\r\n    <div class=\"display-section\">\r\n      <div class=\"split-view\">\r\n        <!-- 左侧PDF预览 -->\r\n        <div class=\"pdf-panel\">\r\n          <div class=\"panel-header\">\r\n            <h3>PDF预览</h3>\r\n            <div class=\"page-controls\" v-if=\"pdfUrl && totalPages > 0\">\r\n              <button @click=\"prevPage\" :disabled=\"currentPage <= 1\">上一页</button>\r\n              <span>第 {{ currentPage }} 页 / 共 {{ totalPages }} 页</span>\r\n              <button @click=\"nextPage\" :disabled=\"currentPage >= totalPages\">下一页</button>\r\n            </div>\r\n          </div>\r\n          <div class=\"pdf-container\">\r\n            <iframe\r\n              v-if=\"pdfUrl\"\r\n              :src=\"`${pdfUrl}#page=${currentPage}`\"\r\n              class=\"pdf-iframe\"\r\n              frameborder=\"0\"\r\n              @load=\"onPdfLoad\"\r\n            ></iframe>\r\n            <div v-else class=\"no-pdf\">\r\n              <p>未找到PDF文件</p>\r\n              <router-link to=\"/\" class=\"back-link\">返回首页上传</router-link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 右侧LaTeX输出 -->\r\n        <div class=\"latex-panel\">\r\n          <div class=\"panel-header\">\r\n            <h3>Nougat LaTeX 输出</h3>\r\n            <div class=\"latex-controls\">\r\n              <button @click=\"copyLaTeX\" class=\"copy-btn\">复制全部</button>\r\n              <button @click=\"downloadLaTeX\" class=\"download-btn\">下载</button>\r\n            </div>\r\n          </div>\r\n          <div class=\"latex-output\">\r\n            <div\r\n              v-for=\"(line, index) in latexLines\"\r\n              :key=\"index\"\r\n              class=\"latex-line\"\r\n              :class=\"{ \r\n                'highlighted': hoveredLine === index,\r\n                'active': activeLine === index\r\n              }\"\r\n              @mouseenter=\"handleLineHover(index)\"\r\n              @mouseleave=\"handleLineLeave\"\r\n              @click=\"handleLineClick(index)\"\r\n            >\r\n              <span class=\"line-number\">{{ index + 1 }}</span>\r\n              <span class=\"line-content\">{{ line }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed, ref } from 'vue';\r\nimport { useStore } from 'vuex';\r\n\r\nexport default {\r\n  name: 'OcrResults',\r\n  setup() {\r\n    const store = useStore();\r\n    const currentPage = ref(1);\r\n    const totalPages = ref(5); // 默认值，实际应从API获取\r\n    const hoveredLine = ref(null);\r\n    const activeLine = ref(null);\r\n\r\n    // 从Vuex获取上传的PDF信息\r\n    const pdfUrl = computed(() => {\r\n      const url = store.state.ocrResults?.pdfUrl;\r\n      console.log('pdfUrl from store:', url); // 调试日志\r\n      return url || '';\r\n    });\r\n    \r\n    const latexText = computed(() => store.state.ocrResults?.text || '');\r\n    const fileName = computed(() => store.state.ocrResults?.fileName || '');\r\n\r\n    // LaTeX按行拆分\r\n    const latexLines = computed(() => {\r\n      if (!latexText.value) {\r\n        // 如果没有从store获取到数据，使用图片中的示例数据\r\n        return [\r\n          '\\\\documentclass{article}',\r\n          '\\\\usepackage{amsmath}',\r\n          '\\\\usepackage{amssymb}',\r\n          '\\\\begin{document}',\r\n          '\\\\title{OCR智能平台技术文档}',\r\n          '\\\\author{OCR Team}',\r\n          '\\\\date{\\\\today}',\r\n          '\\\\maketitle',\r\n          '',\r\n          '# Nougat: Neural Optical Understanding for Academic Documents',\r\n          'Lukas Blecher',\r\n          'Guillem Cucurull',\r\n          'Thomas Scialom',\r\n          'Robert Stojnic',\r\n          'Meta AI'\r\n        ];\r\n      }\r\n      return latexText.value.split('\\n').filter(line => line.trim() !== '');\r\n    });\r\n\r\n    // PDF加载完成回调\r\n    const onPdfLoad = () => {\r\n      console.log('PDF加载完成');\r\n      // 这里可以获取PDF的总页数\r\n      // 注意：iframe方式无法直接获取总页数，需要后端API支持\r\n    };\r\n\r\n    // 鼠标悬停处理\r\n    const handleLineHover = (lineIndex) => {\r\n      hoveredLine.value = lineIndex;\r\n      scrollToCorrespondingPosition(lineIndex);\r\n    };\r\n\r\n    const handleLineLeave = () => {\r\n      hoveredLine.value = null;\r\n    };\r\n\r\n    const handleLineClick = (lineIndex) => {\r\n      activeLine.value = lineIndex;\r\n      scrollToCorrespondingPosition(lineIndex);\r\n    };\r\n\r\n    // 滚动到对应位置\r\n    const scrollToCorrespondingPosition = (lineIndex) => {\r\n      // 简单的页面映射逻辑：每10行对应一页\r\n      const targetPage = Math.floor(lineIndex / 10) + 1;\r\n      if (targetPage >= 1 && targetPage <= totalPages.value) {\r\n        currentPage.value = targetPage;\r\n      }\r\n    };\r\n\r\n    // 页面导航\r\n    const prevPage = () => {\r\n      if (currentPage.value > 1) {\r\n        currentPage.value--;\r\n      }\r\n    };\r\n\r\n    const nextPage = () => {\r\n      if (currentPage.value < totalPages.value) {\r\n        currentPage.value++;\r\n      }\r\n    };\r\n\r\n    // 复制LaTeX\r\n    const copyLaTeX = () => {\r\n      const text = latexLines.value.join('\\n');\r\n      navigator.clipboard.writeText(text).then(() => {\r\n        alert('LaTeX内容已复制到剪贴板');\r\n      }).catch(() => {\r\n        // 备用方案\r\n        const textArea = document.createElement('textarea');\r\n        textArea.value = text;\r\n        document.body.appendChild(textArea);\r\n        textArea.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(textArea);\r\n        alert('LaTeX内容已复制到剪贴板');\r\n      });\r\n    };\r\n\r\n    // 下载LaTeX\r\n    const downloadLaTeX = () => {\r\n      const text = latexLines.value.join('\\n');\r\n      const blob = new Blob([text], { type: 'text/plain' });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = fileName.value ? `${fileName.value.replace('.pdf', '')}.tex` : 'output.tex';\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      URL.revokeObjectURL(url);\r\n    };\r\n\r\n    return {\r\n      pdfUrl,\r\n      latexLines,\r\n      currentPage,\r\n      totalPages,\r\n      hoveredLine,\r\n      activeLine,\r\n      onPdfLoad,\r\n      handleLineHover,\r\n      handleLineLeave,\r\n      handleLineClick,\r\n      prevPage,\r\n      nextPage,\r\n      copyLaTeX,\r\n      downloadLaTeX\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.results {\r\n  padding: 20px;\r\n  min-height: calc(100vh - 140px);\r\n}\r\n\r\n.display-section {\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 20px rgba(0,0,0,0.1);\r\n  overflow: hidden;\r\n}\r\n\r\n.split-view {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  height: 600px;\r\n}\r\n\r\n.pdf-panel, .latex-panel {\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-right: 1px solid #eee;\r\n}\r\n\r\n.latex-panel {\r\n  border-right: none;\r\n}\r\n\r\n.panel-header {\r\n  padding: 1rem 1.5rem;\r\n  background: #f8f9fa;\r\n  border-bottom: 1px solid #eee;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.panel-header h3 {\r\n  color: #2c3e50;\r\n  font-size: 1.1rem;\r\n  margin: 0;\r\n}\r\n\r\n.page-controls, .latex-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.page-controls button, .copy-btn, .download-btn {\r\n  padding: 0.5rem 1rem;\r\n  border: 1px solid #ddd;\r\n  background: white;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.page-controls button:hover:not(:disabled), \r\n.copy-btn:hover, \r\n.download-btn:hover {\r\n  background: #667eea;\r\n  color: white;\r\n  border-color: #667eea;\r\n}\r\n\r\n.page-controls button:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.pdf-container {\r\n  flex: 1;\r\n  overflow: auto;\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.pdf-iframe {\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 500px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n}\r\n\r\n.no-pdf {\r\n  text-align: center;\r\n  color: #666;\r\n}\r\n\r\n.back-link {\r\n  color: #667eea;\r\n  text-decoration: none;\r\n  margin-top: 1rem;\r\n  display: inline-block;\r\n}\r\n\r\n.back-link:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.latex-output {\r\n  flex: 1;\r\n  overflow: auto;\r\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\r\n  font-size: 13px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.latex-line {\r\n  padding: 4px 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-left: 3px solid transparent;\r\n  transition: all 0.2s ease;\r\n  cursor: pointer;\r\n}\r\n\r\n.latex-line:hover {\r\n  background: #f8f9fa;\r\n}\r\n\r\n.latex-line.highlighted {\r\n  background: #e3f2fd;\r\n  border-left-color: #2196f3;\r\n}\r\n\r\n.latex-line.active {\r\n  background: #bbdefb;\r\n  border-left-color: #1976d2;\r\n}\r\n\r\n.line-number {\r\n  min-width: 40px;\r\n  color: #7f8c8d;\r\n  font-size: 11px;\r\n  user-select: none;\r\n}\r\n\r\n.line-content {\r\n  flex: 1;\r\n  white-space: pre-wrap;\r\n  word-break: break-all;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .split-view {\r\n    grid-template-columns: 1fr;\r\n    height: auto;\r\n  }\r\n  \r\n  .pdf-panel, .latex-panel {\r\n    height: 400px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}