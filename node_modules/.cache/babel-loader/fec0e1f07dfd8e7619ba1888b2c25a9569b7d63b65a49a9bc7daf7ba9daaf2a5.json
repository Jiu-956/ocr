{"ast":null,"code":"import { ref, computed, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nimport * as pdfjsLib from 'pdfjs-dist';\n\n// 关键：告诉 pdf.js 使用默认 worker\nimport workerSrc from 'pdfjs-dist/build/pdf.worker.mjs';\n\n// 设置 workerSrc\npdfjsLib.GlobalWorkerOptions.workerSrc = workerSrc;\nexport default {\n  name: \"OcrResults\",\n  setup() {\n    const store = useStore();\n    const pdfContainer = ref(null);\n    const pdfDoc = ref(null);\n\n    // 计算属性：LaTeX 按行拆分\n    const latexLines = computed(() => {\n      return store.state.ocrResults?.text ? store.state.ocrResults.text.split(\"\\n\") : [];\n    });\n\n    // 加载 PDF\n    onMounted(async () => {\n      const pdfUrl = store.state.ocrResults?.pdfUrl;\n      console.log(\"加载 PDF 的 URL:\", pdfUrl); // ✅ 调试用\n\n      if (pdfUrl) {\n        const loadingTask = pdfjsLib.getDocument(pdfUrl);\n        pdfDoc.value = await loadingTask.promise;\n        console.log(\"PDF 加载成功, 页数:\", pdfDoc.value.numPages);\n        renderPage(1); // 默认渲染第 1 页\n      } else {\n        console.error(\"pdfUrl 无效，无法加载 PDF\");\n      }\n    });\n    const renderPage = async num => {\n      if (!pdfDoc.value) return;\n      const page = await pdfDoc.value.getPage(num);\n      const viewport = page.getViewport({\n        scale: 1.5\n      });\n      const canvas = document.createElement(\"canvas\");\n      const context = canvas.getContext(\"2d\");\n      canvas.height = viewport.height;\n      canvas.width = viewport.width;\n      const renderContext = {\n        canvasContext: context,\n        viewport\n      };\n      await page.render(renderContext).promise;\n      pdfContainer.value.innerHTML = \"\"; // 清空旧的\n      pdfContainer.value.appendChild(canvas);\n    };\n\n    // 鼠标悬停时滚动 PDF 对应位置\n    const scrollPdfTo = lineIndex => {\n      if (pdfContainer.value && store.state.ocrResults?.text) {\n        const totalLines = store.state.ocrResults.text.split(\"\\n\").length;\n        const percent = lineIndex / totalLines;\n        pdfContainer.value.scrollTop = pdfContainer.value.scrollHeight * percent;\n      }\n    };\n    return {\n      pdfContainer,\n      latexLines,\n      scrollPdfTo\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","pdfjsLib","workerSrc","GlobalWorkerOptions","name","setup","store","pdfContainer","pdfDoc","latexLines","state","ocrResults","text","split","pdfUrl","console","log","loadingTask","getDocument","value","promise","numPages","renderPage","error","num","page","getPage","viewport","getViewport","scale","canvas","document","createElement","context","getContext","height","width","renderContext","canvasContext","render","innerHTML","appendChild","scrollPdfTo","lineIndex","totalLines","length","percent","scrollTop","scrollHeight"],"sources":["D:\\OCR\\ocr\\src\\views\\Results.vue"],"sourcesContent":["<template>\r\n  <div class=\"results\">\r\n    <h2>OCR Results</h2>\r\n\r\n    <div class=\"results-container\">\r\n      <!-- 左边 PDF 渲染 -->\r\n      <div ref=\"pdfContainer\" class=\"pdf-viewer\"></div>\r\n\r\n      <!-- 右边 Nougat LaTeX 输出 -->\r\n      <div class=\"latex-viewer\">\r\n        <h3>Nougat LaTeX 输出：</h3>\r\n        <pre>\r\n          <div\r\n            v-for=\"(line, index) in latexLines\"\r\n            :key=\"index\"\r\n            class=\"latex-line\"\r\n            @mouseover=\"scrollPdfTo(index)\"\r\n          >\r\n            {{ line }}\r\n          </div>\r\n        </pre>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport * as pdfjsLib from 'pdfjs-dist';\r\n\r\n// 关键：告诉 pdf.js 使用默认 worker\r\nimport workerSrc from 'pdfjs-dist/build/pdf.worker.mjs';\r\n\r\n// 设置 workerSrc\r\npdfjsLib.GlobalWorkerOptions.workerSrc = workerSrc;\r\n\r\n\r\n\r\nexport default {\r\n  name: \"OcrResults\",\r\n  setup() {\r\n    const store = useStore();\r\n    const pdfContainer = ref(null);\r\n    const pdfDoc = ref(null);\r\n\r\n    // 计算属性：LaTeX 按行拆分\r\n    const latexLines = computed(() => {\r\n      return store.state.ocrResults?.text\r\n        ? store.state.ocrResults.text.split(\"\\n\")\r\n        : [];\r\n    });\r\n\r\n    // 加载 PDF\r\n    onMounted(async () => {\r\n      const pdfUrl = store.state.ocrResults?.pdfUrl;\r\n      console.log(\"加载 PDF 的 URL:\", pdfUrl); // ✅ 调试用\r\n\r\n      if (pdfUrl) {\r\n        const loadingTask = pdfjsLib.getDocument(pdfUrl);\r\n        pdfDoc.value = await loadingTask.promise;\r\n        console.log(\"PDF 加载成功, 页数:\", pdfDoc.value.numPages);\r\n        renderPage(1); // 默认渲染第 1 页\r\n      } else {\r\n        console.error(\"pdfUrl 无效，无法加载 PDF\");\r\n      }\r\n    });\r\n\r\n    const renderPage = async (num) => {\r\n      if (!pdfDoc.value) return;\r\n      const page = await pdfDoc.value.getPage(num);\r\n      const viewport = page.getViewport({ scale: 1.5 });\r\n\r\n      const canvas = document.createElement(\"canvas\");\r\n      const context = canvas.getContext(\"2d\");\r\n      canvas.height = viewport.height;\r\n      canvas.width = viewport.width;\r\n\r\n      const renderContext = { canvasContext: context, viewport };\r\n      await page.render(renderContext).promise;\r\n\r\n      pdfContainer.value.innerHTML = \"\"; // 清空旧的\r\n      pdfContainer.value.appendChild(canvas);\r\n    };\r\n\r\n    // 鼠标悬停时滚动 PDF 对应位置\r\n    const scrollPdfTo = (lineIndex) => {\r\n      if (pdfContainer.value && store.state.ocrResults?.text) {\r\n        const totalLines = store.state.ocrResults.text.split(\"\\n\").length;\r\n        const percent = lineIndex / totalLines;\r\n        pdfContainer.value.scrollTop =\r\n          pdfContainer.value.scrollHeight * percent;\r\n      }\r\n    };\r\n\r\n    return {\r\n      pdfContainer,\r\n      latexLines,\r\n      scrollPdfTo,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.results-container {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.pdf-viewer {\r\n  flex: 1;\r\n  height: 80vh;\r\n  overflow-y: auto;\r\n  border: 1px solid #ddd;\r\n  background: #f9f9f9;\r\n}\r\n\r\n.latex-viewer {\r\n  flex: 1;\r\n  height: 80vh;\r\n  overflow-y: auto;\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n  font-family: monospace;\r\n  background: #fff;\r\n}\r\n\r\n.latex-line {\r\n  padding: 2px 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.latex-line:hover {\r\n  background: #e0f7fa;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}