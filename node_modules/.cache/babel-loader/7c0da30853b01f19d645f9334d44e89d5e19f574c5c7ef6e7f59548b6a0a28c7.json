{"ast":null,"code":"import { mapState } from 'vuex';\nexport default {\n  name: 'ResultsView',\n  data() {\n    return {\n      currentPage: 1,\n      totalPages: 5,\n      hoveredLine: null,\n      activeLine: null,\n      pdfSource: '',\n      fileName: ''\n    };\n  },\n  computed: {\n    ...mapState(['uploadedFile']),\n    latexLines() {\n      // 这里应该是从Nougat API获取的实际LaTeX输出\n      return ['\\\\documentclass{article}', '\\\\usepackage{amsmath}', '\\\\usepackage{amssymb}', '\\\\begin{document}', '\\\\title{OCR智能平台技术文档}', '\\\\author{OCR Team}', '\\\\date{\\\\today}', '\\\\maketitle', '', '\\\\section{引言}', 'OCR（光学字符识别）技术在现代文档处理中扮演着重要角色。', '本文介绍基于Nougat的智能OCR平台实现方案。', '', '\\\\section{技术架构}', '\\\\subsection{PDF解析模块}', 'PDF解析使用浏览器原生PDF渲染，支持高质量的文档显示。', '数学公式：$E = mc^2$', '矩阵表示：', '\\\\[', '\\\\begin{bmatrix}', 'a & b \\\\\\\\', 'c & d', '\\\\end{bmatrix}', '\\\\]', '', '\\\\subsection{LaTeX生成模块}', '基于Nougat模型，实现PDF到LaTeX的智能转换。', '支持复杂的数学公式和学术文档结构。', '', '\\\\section{实验结果}', '准确率达到98.7\\\\%，处理速度较传统方案提升3倍。', '\\\\end{document}'];\n    }\n  },\n  mounted() {\n    if (this.uploadedFile) {\n      this.pdfSource = this.uploadedFile.url;\n      this.fileName = this.uploadedFile.name;\n    }\n  },\n  methods: {\n    handleLineHover(lineIndex) {\n      this.hoveredLine = lineIndex;\n      this.scrollToCorrespondingPosition(lineIndex);\n    },\n    handleLineLeave() {\n      this.hoveredLine = null;\n    },\n    handleLineClick(lineIndex) {\n      this.activeLine = lineIndex;\n      this.scrollToCorrespondingPosition(lineIndex);\n    },\n    scrollToCorrespondingPosition(lineIndex) {\n      const targetPage = Math.floor(lineIndex / 10) + 1;\n      if (targetPage >= 1 && targetPage <= this.totalPages) {\n        this.currentPage = targetPage;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    copyLaTeX() {\n      const text = this.latexLines.join('\\n');\n      navigator.clipboard.writeText(text).then(() => {\n        alert('LaTeX内容已复制到剪贴板');\n      });\n    },\n    downloadLaTeX() {\n      const text = this.latexLines.join('\\n');\n      const blob = new Blob([text], {\n        type: 'text/plain'\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = this.fileName ? `${this.fileName.replace('.pdf', '')}.tex` : 'output.tex';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    }\n  }\n};","map":{"version":3,"names":["mapState","name","data","currentPage","totalPages","hoveredLine","activeLine","pdfSource","fileName","computed","latexLines","mounted","uploadedFile","url","methods","handleLineHover","lineIndex","scrollToCorrespondingPosition","handleLineLeave","handleLineClick","targetPage","Math","floor","prevPage","nextPage","copyLaTeX","text","join","navigator","clipboard","writeText","then","alert","downloadLaTeX","blob","Blob","type","URL","createObjectURL","a","document","createElement","href","download","replace","body","appendChild","click","removeChild","revokeObjectURL"],"sources":["D:\\OCR\\ocr\\src\\views\\Results.vue"],"sourcesContent":["<template>\r\n  <div class=\"results-view\">\r\n    <div class=\"display-section\">\r\n      <div class=\"split-view\">\r\n        <!-- 左侧PDF渲染 -->\r\n        <div class=\"pdf-panel\">\r\n          <div class=\"panel-header\">\r\n            <h3>PDF预览</h3>\r\n            <div class=\"page-controls\" v-if=\"totalPages > 0\">\r\n              <button @click=\"prevPage\" :disabled=\"currentPage <= 1\">上一页</button>\r\n              <span>第 {{ currentPage }} 页 / 共 {{ totalPages }} 页</span>\r\n              <button @click=\"nextPage\" :disabled=\"currentPage >= totalPages\">下一页</button>\r\n            </div>\r\n          </div>\r\n          <div class=\"pdf-container\">\r\n            <iframe\r\n              v-if=\"pdfSource\"\r\n              :src=\"`${pdfSource}#page=${currentPage}`\"\r\n              class=\"pdf-iframe\"\r\n              frameborder=\"0\"\r\n            ></iframe>\r\n            <div v-else class=\"no-file\">\r\n              <p>请先上传PDF文件</p>\r\n              <router-link to=\"/\" class=\"back-link\">返回首页上传</router-link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 右侧LaTeX输出 -->\r\n        <div class=\"latex-panel\">\r\n          <div class=\"panel-header\">\r\n            <h3>Nougat LaTeX 输出</h3>\r\n            <div class=\"latex-controls\">\r\n              <button @click=\"copyLaTeX\" class=\"copy-btn\">复制全部</button>\r\n              <button @click=\"downloadLaTeX\" class=\"download-btn\">下载</button>\r\n            </div>\r\n          </div>\r\n          <div class=\"latex-output\">\r\n            <div\r\n              v-for=\"(line, index) in latexLines\"\r\n              :key=\"index\"\r\n              class=\"latex-line\"\r\n              :class=\"{ \r\n                'highlighted': hoveredLine === index,\r\n                'active': activeLine === index\r\n              }\"\r\n              @mouseenter=\"handleLineHover(index)\"\r\n              @mouseleave=\"handleLineLeave\"\r\n              @click=\"handleLineClick(index)\"\r\n            >\r\n              <span class=\"line-number\">{{ index + 1 }}</span>\r\n              <span class=\"line-content\">{{ line }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex';\r\n\r\nexport default {\r\n  name: 'ResultsView',\r\n  data() {\r\n    return {\r\n      currentPage: 1,\r\n      totalPages: 5,\r\n      hoveredLine: null,\r\n      activeLine: null,\r\n      pdfSource: '',\r\n      fileName: ''\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(['uploadedFile']),\r\n    latexLines() {\r\n      // 这里应该是从Nougat API获取的实际LaTeX输出\r\n      return [\r\n        '\\\\documentclass{article}',\r\n        '\\\\usepackage{amsmath}',\r\n        '\\\\usepackage{amssymb}',\r\n        '\\\\begin{document}',\r\n        '\\\\title{OCR智能平台技术文档}',\r\n        '\\\\author{OCR Team}',\r\n        '\\\\date{\\\\today}',\r\n        '\\\\maketitle',\r\n        '',\r\n        '\\\\section{引言}',\r\n        'OCR（光学字符识别）技术在现代文档处理中扮演着重要角色。',\r\n        '本文介绍基于Nougat的智能OCR平台实现方案。',\r\n        '',\r\n        '\\\\section{技术架构}',\r\n        '\\\\subsection{PDF解析模块}',\r\n        'PDF解析使用浏览器原生PDF渲染，支持高质量的文档显示。',\r\n        '数学公式：$E = mc^2$',\r\n        '矩阵表示：',\r\n        '\\\\[',\r\n        '\\\\begin{bmatrix}',\r\n        'a & b \\\\\\\\',\r\n        'c & d',\r\n        '\\\\end{bmatrix}',\r\n        '\\\\]',\r\n        '',\r\n        '\\\\subsection{LaTeX生成模块}',\r\n        '基于Nougat模型，实现PDF到LaTeX的智能转换。',\r\n        '支持复杂的数学公式和学术文档结构。',\r\n        '',\r\n        '\\\\section{实验结果}',\r\n        '准确率达到98.7\\\\%，处理速度较传统方案提升3倍。',\r\n        '\\\\end{document}'\r\n      ];\r\n    }\r\n  },\r\n  mounted() {\r\n    if (this.uploadedFile) {\r\n      this.pdfSource = this.uploadedFile.url;\r\n      this.fileName = this.uploadedFile.name;\r\n    }\r\n  },\r\n  methods: {\r\n    handleLineHover(lineIndex) {\r\n      this.hoveredLine = lineIndex;\r\n      this.scrollToCorrespondingPosition(lineIndex);\r\n    },\r\n    handleLineLeave() {\r\n      this.hoveredLine = null;\r\n    },\r\n    handleLineClick(lineIndex) {\r\n      this.activeLine = lineIndex;\r\n      this.scrollToCorrespondingPosition(lineIndex);\r\n    },\r\n    scrollToCorrespondingPosition(lineIndex) {\r\n      const targetPage = Math.floor(lineIndex / 10) + 1;\r\n      if (targetPage >= 1 && targetPage <= this.totalPages) {\r\n        this.currentPage = targetPage;\r\n      }\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    copyLaTeX() {\r\n      const text = this.latexLines.join('\\n');\r\n      navigator.clipboard.writeText(text).then(() => {\r\n        alert('LaTeX内容已复制到剪贴板');\r\n      });\r\n    },\r\n    downloadLaTeX() {\r\n      const text = this.latexLines.join('\\n');\r\n      const blob = new Blob([text], { type: 'text/plain' });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = this.fileName ? `${this.fileName.replace('.pdf', '')}.tex` : 'output.tex';\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      URL.revokeObjectURL(url);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.results-view {\r\n  padding: 2rem;\r\n}\r\n\r\n.display-section {\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 20px rgba(0,0,0,0.1);\r\n  overflow: hidden;\r\n}\r\n\r\n.split-view {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  height: 600px;\r\n}\r\n\r\n.pdf-panel, .latex-panel {\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-right: 1px solid #eee;\r\n}\r\n\r\n.latex-panel {\r\n  border-right: none;\r\n}\r\n\r\n.panel-header {\r\n  padding: 1rem 1.5rem;\r\n  background: #f8f9fa;\r\n  border-bottom: 1px solid #eee;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.panel-header h3 {\r\n  color: #2c3e50;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.page-controls, .latex-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.page-controls button, .copy-btn, .download-btn {\r\n  padding: 0.5rem 1rem;\r\n  border: 1px solid #ddd;\r\n  background: white;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.page-controls button:hover:not(:disabled), \r\n.copy-btn:hover, \r\n.download-btn:hover {\r\n  background: #667eea;\r\n  color: white;\r\n  border-color: #667eea;\r\n}\r\n\r\n.page-controls button:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.pdf-container {\r\n  flex: 1;\r\n  overflow: auto;\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.pdf-iframe {\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 500px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n}\r\n\r\n.no-file {\r\n  text-align: center;\r\n  color: #666;\r\n}\r\n\r\n.back-link {\r\n  color: #667eea;\r\n  text-decoration: none;\r\n  margin-top: 1rem;\r\n  display: inline-block;\r\n}\r\n\r\n.back-link:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.latex-output {\r\n  flex: 1;\r\n  overflow: auto;\r\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\r\n  font-size: 13px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.latex-line {\r\n  padding: 4px 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-left: 3px solid transparent;\r\n  transition: all 0.2s ease;\r\n  cursor: pointer;\r\n}\r\n\r\n.latex-line:hover {\r\n  background: #f8f9fa;\r\n}\r\n\r\n.latex-line.highlighted {\r\n  background: #e3f2fd;\r\n  border-left-color: #2196f3;\r\n}\r\n\r\n.latex-line.active {\r\n  background: #bbdefb;\r\n  border-left-color: #1976d2;\r\n}\r\n\r\n.line-number {\r\n  min-width: 40px;\r\n  color: #7f8c8d;\r\n  font-size: 11px;\r\n  user-select: none;\r\n}\r\n\r\n.line-content {\r\n  flex: 1;\r\n  white-space: pre-wrap;\r\n  word-break: break-all;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .split-view {\r\n    grid-template-columns: 1fr;\r\n    height: auto;\r\n  }\r\n  \r\n  .pdf-panel, .latex-panel {\r\n    height: 400px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}