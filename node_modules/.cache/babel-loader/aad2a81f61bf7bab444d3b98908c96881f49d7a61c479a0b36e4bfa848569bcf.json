{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { ref, computed, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nexport default {\n  name: \"OcrResults\",\n  setup() {\n    const store = useStore();\n    const pdfUrl = computed(() => store.state.ocrResults?.pdfUrl || \"\");\n    const latexText = computed(() => store.state.ocrResults?.text || \"\");\n    const currentPage = ref(1);\n    const totalPages = ref(0);\n\n    // LaTeX 按行拆分\n    const latexLines = computed(() => {\n      return latexText.value.split(\"\\n\").filter(line => line.trim() !== \"\");\n    });\n\n    // 鼠标悬停滚动 PDF\n    const scrollPdfTo = lineIndex => {\n      // 简单的页面映射逻辑：每10行对应一页\n      const targetPage = Math.floor(lineIndex / 10) + 1;\n      if (targetPage >= 1 && targetPage <= totalPages.value) {\n        currentPage.value = targetPage;\n        // 更新iframe的src以跳转到对应页面\n        const iframe = document.querySelector('.pdf-iframe');\n        if (iframe) {\n          iframe.src = `${pdfUrl.value}#page=${targetPage}`;\n        }\n      }\n    };\n\n    // PDF加载完成回调\n    const onPdfLoad = () => {\n      // 注意：iframe方式无法直接获取总页数\n      // 这里设置一个默认值，实际应该从API获取\n      totalPages.value = 5;\n    };\n    return {\n      pdfUrl,\n      latexLines,\n      scrollPdfTo,\n      onPdfLoad\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","name","setup","store","pdfUrl","state","ocrResults","latexText","text","currentPage","totalPages","latexLines","value","split","filter","line","trim","scrollPdfTo","lineIndex","targetPage","Math","floor","iframe","document","querySelector","src","onPdfLoad"],"sources":["D:\\OCR\\ocr\\src\\views\\Results.vue"],"sourcesContent":["<template>\r\n  <div class=\"results\">\r\n    <h2>OCR Results</h2>\r\n\r\n    <div class=\"results-container\">\r\n      <!-- 左边 PDF 渲染 -->\r\n      <div class=\"pdf-viewer\">\r\n        <iframe\r\n          v-if=\"pdfUrl\"\r\n          :src=\"pdfUrl\"\r\n          class=\"pdf-iframe\"\r\n          frameborder=\"0\"\r\n          @load=\"onPdfLoad\"\r\n        ></iframe>\r\n        <div v-else class=\"pdf-placeholder\">\r\n          <p>请上传PDF文件</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 右边 Nougat LaTeX 输出 -->\r\n      <div class=\"latex-viewer\">\r\n        <h3>Nougat LaTeX 输出：</h3>\r\n        <div class=\"latex-lines\">\r\n          <div\r\n            v-for=\"(line, index) in latexLines\"\r\n            :key=\"index\"\r\n            class=\"latex-line\"\r\n            @mouseover=\"scrollPdfTo(index)\"\r\n          >\r\n            {{ line }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"OcrResults\",\r\n  setup() {\r\n    const store = useStore();\r\n    const pdfUrl = computed(() => store.state.ocrResults?.pdfUrl || \"\");\r\n    const latexText = computed(() => store.state.ocrResults?.text || \"\");\r\n    const currentPage = ref(1);\r\n    const totalPages = ref(0);\r\n\r\n    // LaTeX 按行拆分\r\n    const latexLines = computed(() => {\r\n      return latexText.value.split(\"\\n\").filter(line => line.trim() !== \"\");\r\n    });\r\n\r\n    // 鼠标悬停滚动 PDF\r\n    const scrollPdfTo = (lineIndex) => {\r\n      // 简单的页面映射逻辑：每10行对应一页\r\n      const targetPage = Math.floor(lineIndex / 10) + 1;\r\n      if (targetPage >= 1 && targetPage <= totalPages.value) {\r\n        currentPage.value = targetPage;\r\n        // 更新iframe的src以跳转到对应页面\r\n        const iframe = document.querySelector('.pdf-iframe');\r\n        if (iframe) {\r\n          iframe.src = `${pdfUrl.value}#page=${targetPage}`;\r\n        }\r\n      }\r\n    };\r\n\r\n    // PDF加载完成回调\r\n    const onPdfLoad = () => {\r\n      // 注意：iframe方式无法直接获取总页数\r\n      // 这里设置一个默认值，实际应该从API获取\r\n      totalPages.value = 5;\r\n    };\r\n\r\n    return {\r\n      pdfUrl,\r\n      latexLines,\r\n      scrollPdfTo,\r\n      onPdfLoad\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.results {\r\n  padding: 20px;\r\n}\r\n\r\n.results-container {\r\n  display: flex;\r\n  gap: 20px;\r\n  height: calc(100vh - 120px);\r\n}\r\n\r\n.pdf-viewer {\r\n  flex: 1;\r\n  border: 1px solid #ddd;\r\n  background: #f9f9f9;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n.pdf-iframe {\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 500px;\r\n}\r\n\r\n.pdf-placeholder {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #666;\r\n}\r\n\r\n.latex-viewer {\r\n  flex: 1;\r\n  border: 1px solid #ddd;\r\n  background: #fff;\r\n  overflow-y: auto;\r\n  padding: 10px;\r\n}\r\n\r\n.latex-lines {\r\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\r\n  font-size: 13px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.latex-line {\r\n  padding: 4px 8px;\r\n  margin: 2px 0;\r\n  cursor: pointer;\r\n  white-space: pre-wrap;\r\n}\r\n\r\n.latex-line:hover {\r\n  background-color: #e0f7fa;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .results-container {\r\n    flex-direction: column;\r\n    height: auto;\r\n  }\r\n  \r\n  .pdf-viewer, .latex-viewer {\r\n    height: 400px;\r\n  }\r\n}\r\n</style>"],"mappings":";;AAsCA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AAC9C,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC,CAAC;IACxB,MAAMI,MAAK,GAAIN,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACC,UAAU,EAAEF,MAAK,IAAK,EAAE,CAAC;IACnE,MAAMG,SAAQ,GAAIT,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACC,UAAU,EAAEE,IAAG,IAAK,EAAE,CAAC;IACpE,MAAMC,WAAU,GAAIZ,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMa,UAAS,GAAIb,GAAG,CAAC,CAAC,CAAC;;IAEzB;IACA,MAAMc,UAAS,GAAIb,QAAQ,CAAC,MAAM;MAChC,OAAOS,SAAS,CAACK,KAAK,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,IAAI,CAAC,MAAM,EAAE,CAAC;IACvE,CAAC,CAAC;;IAEF;IACA,MAAMC,WAAU,GAAKC,SAAS,IAAK;MACjC;MACA,MAAMC,UAAS,GAAIC,IAAI,CAACC,KAAK,CAACH,SAAQ,GAAI,EAAE,IAAI,CAAC;MACjD,IAAIC,UAAS,IAAK,KAAKA,UAAS,IAAKT,UAAU,CAACE,KAAK,EAAE;QACrDH,WAAW,CAACG,KAAI,GAAIO,UAAU;QAC9B;QACA,MAAMG,MAAK,GAAIC,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAC;QACpD,IAAIF,MAAM,EAAE;UACVA,MAAM,CAACG,GAAE,GAAI,GAAGrB,MAAM,CAACQ,KAAK,SAASO,UAAU,EAAE;QACnD;MACF;IACF,CAAC;;IAED;IACA,MAAMO,SAAQ,GAAIA,CAAA,KAAM;MACtB;MACA;MACAhB,UAAU,CAACE,KAAI,GAAI,CAAC;IACtB,CAAC;IAED,OAAO;MACLR,MAAM;MACNO,UAAU;MACVM,WAAW;MACXS;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}