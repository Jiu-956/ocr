{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"results\"\n};\nconst _hoisted_2 = {\n  class: \"results-container\"\n};\nconst _hoisted_3 = {\n  class: \"pdf-viewer\"\n};\nconst _hoisted_4 = {\n  class: \"pdf-header\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"page-controls\"\n};\nconst _hoisted_6 = [\"disabled\"];\nconst _hoisted_7 = [\"disabled\"];\nconst _hoisted_8 = {\n  class: \"pdf-container\"\n};\nconst _hoisted_9 = [\"src\"];\nconst _hoisted_10 = {\n  key: 1,\n  class: \"pdf-placeholder\"\n};\nconst _hoisted_11 = {\n  class: \"latex-viewer\"\n};\nconst _hoisted_12 = {\n  class: \"latex-header\"\n};\nconst _hoisted_13 = {\n  key: 0,\n  class: \"page-controls\"\n};\nconst _hoisted_14 = {\n  class: \"latex-lines\"\n};\nconst _hoisted_15 = [\"onMouseenter\"];\nconst _hoisted_16 = {\n  class: \"line-number\"\n};\nconst _hoisted_17 = {\n  class: \"line-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"OCR Results\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 左边 PDF 渲染 \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"PDF预览\", -1 /* CACHED */)), $setup.totalPages > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.prevPage && $setup.prevPage(...args)),\n    disabled: $setup.currentPage <= 1\n  }, \"上一页\", 8 /* PROPS */, _hoisted_6), _createElementVNode(\"span\", null, \"第 \" + _toDisplayString($setup.currentPage) + \" 页 / 共 \" + _toDisplayString($setup.totalPages) + \" 页\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.nextPage && $setup.nextPage(...args)),\n    disabled: $setup.currentPage >= $setup.totalPages\n  }, \"下一页\", 8 /* PROPS */, _hoisted_7)])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_8, [$setup.pdfUrl ? (_openBlock(), _createElementBlock(\"iframe\", {\n    key: 0,\n    src: `${$setup.pdfUrl}#page=${$setup.currentPage}`,\n    class: \"pdf-iframe\",\n    frameborder: \"0\",\n    onLoad: _cache[2] || (_cache[2] = (...args) => $setup.onPdfLoad && $setup.onPdfLoad(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_9)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _cache[5] || (_cache[5] = [_createElementVNode(\"p\", null, \"请上传PDF文件\", -1 /* CACHED */)])))])]), _createCommentVNode(\" 右边 Nougat LaTeX 输出 \"), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"Nougat LaTeX 输出\", -1 /* CACHED */)), $setup.totalPages > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"span\", null, \"第 \" + _toDisplayString($setup.currentPage) + \" 页 / 共 \" + _toDisplayString($setup.totalPages) + \" 页\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.latexLines, (line, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"latex-line\", {\n        'highlighted': $setup.hoveredLine === index\n      }]),\n      onMouseenter: $event => $setup.handleLineHover(index),\n      onMouseleave: _cache[3] || (_cache[3] = (...args) => $setup.handleLineLeave && $setup.handleLineLeave(...args))\n    }, [_createElementVNode(\"span\", _hoisted_16, _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_17, _toDisplayString(line), 1 /* TEXT */)], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_15);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","_hoisted_4","$setup","totalPages","_hoisted_5","onClick","_cache","args","prevPage","disabled","currentPage","_hoisted_6","_toDisplayString","nextPage","_hoisted_7","_hoisted_8","pdfUrl","src","frameborder","onLoad","onPdfLoad","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_Fragment","_renderList","latexLines","line","index","key","_normalizeClass","hoveredLine","onMouseenter","$event","handleLineHover","onMouseleave","handleLineLeave","_hoisted_16","_hoisted_17"],"sources":["D:\\OCR\\ocr\\src\\views\\Results.vue"],"sourcesContent":["<template>\r\n  <div class=\"results\">\r\n    <h2>OCR Results</h2>\r\n\r\n    <div class=\"results-container\">\r\n      <!-- 左边 PDF 渲染 -->\r\n      <div class=\"pdf-viewer\">\r\n        <div class=\"pdf-header\">\r\n          <h3>PDF预览</h3>\r\n          <div class=\"page-controls\" v-if=\"totalPages > 0\">\r\n            <button @click=\"prevPage\" :disabled=\"currentPage <= 1\">上一页</button>\r\n            <span>第 {{ currentPage }} 页 / 共 {{ totalPages }} 页</span>\r\n            <button @click=\"nextPage\" :disabled=\"currentPage >= totalPages\">下一页</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"pdf-container\">\r\n          <iframe\r\n            v-if=\"pdfUrl\"\r\n            :src=\"`${pdfUrl}#page=${currentPage}`\"\r\n            class=\"pdf-iframe\"\r\n            frameborder=\"0\"\r\n            @load=\"onPdfLoad\"\r\n          ></iframe>\r\n          <div v-else class=\"pdf-placeholder\">\r\n            <p>请上传PDF文件</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 右边 Nougat LaTeX 输出 -->\r\n      <div class=\"latex-viewer\">\r\n        <div class=\"latex-header\">\r\n          <h3>Nougat LaTeX 输出</h3>\r\n          <div class=\"page-controls\" v-if=\"totalPages > 0\">\r\n            <span>第 {{ currentPage }} 页 / 共 {{ totalPages }} 页</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"latex-lines\">\r\n          <div\r\n            v-for=\"(line, index) in latexLines\"\r\n            :key=\"index\"\r\n            class=\"latex-line\"\r\n            :class=\"{ 'highlighted': hoveredLine === index }\"\r\n            @mouseenter=\"handleLineHover(index)\"\r\n            @mouseleave=\"handleLineLeave\"\r\n          >\r\n            <span class=\"line-number\">{{ index + 1 }}</span>\r\n            <span class=\"line-content\">{{ line }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"OcrResults\",\r\n  setup() {\r\n    const store = useStore();\r\n    const pdfUrl = computed(() => store.state.ocrResults?.pdfUrl);\r\n    const latexText = computed(() => store.state.ocrResults?.text || \"\");\r\n    const currentPage = ref(1);\r\n    const totalPages = ref(0);\r\n    const hoveredLine = ref(null);\r\n\r\n    // LaTeX 按行拆分\r\n    const latexLines = computed(() => {\r\n      return latexText.value.split(\"\\n\").filter(line => line.trim() !== \"\");\r\n    });\r\n\r\n    // 鼠标悬停处理\r\n    const handleLineHover = (lineIndex) => {\r\n      hoveredLine.value = lineIndex;\r\n      scrollToCorrespondingPage(lineIndex);\r\n    };\r\n\r\n    const handleLineLeave = () => {\r\n      hoveredLine.value = null;\r\n    };\r\n\r\n    // 滚动到对应页面（简单逻辑：每10行对应一页）\r\n    const scrollToCorrespondingPage = (lineIndex) => {\r\n      const targetPage = Math.floor(lineIndex / 10) + 1;\r\n      if (targetPage >= 1 && targetPage <= totalPages.value) {\r\n        currentPage.value = targetPage;\r\n      }\r\n    };\r\n\r\n    // PDF加载完成回调\r\n    const onPdfLoad = () => {\r\n      // 这里可以获取PDF的总页数（iframe 方式没法直接获取）\r\n      totalPages.value = 5; // 默认值，可改为 API 返回的实际页数\r\n    };\r\n\r\n    // 翻页\r\n    const prevPage = () => {\r\n      if (currentPage.value > 1) {\r\n        currentPage.value--;\r\n      }\r\n    };\r\n\r\n    const nextPage = () => {\r\n      if (currentPage.value < totalPages.value) {\r\n        currentPage.value++;\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      if (!pdfUrl.value) {\r\n        console.error(\"pdfUrl无效\");\r\n      }\r\n    });\r\n\r\n    return {\r\n      pdfUrl,\r\n      latexLines,\r\n      currentPage,\r\n      totalPages,\r\n      hoveredLine,\r\n      handleLineHover,\r\n      handleLineLeave,\r\n      onPdfLoad,\r\n      prevPage,\r\n      nextPage\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.results {\r\n  padding: 20px;\r\n}\r\n\r\n.results-container {\r\n  display: flex;\r\n  gap: 20px;\r\n  height: calc(100vh - 120px);\r\n}\r\n\r\n/* 左边 PDF 区域 */\r\n.pdf-viewer {\r\n  flex: 1;\r\n  border: 1px solid #ddd;\r\n  background: #f9f9f9;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.pdf-header {\r\n  padding: 8px 12px;\r\n  background: #f8f9fa;\r\n  border-bottom: 1px solid #eee;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.pdf-header h3 {\r\n  margin: 0;\r\n  font-size: 14px;\r\n  color: #2c3e50;\r\n}\r\n\r\n.page-controls {\r\n  font-size: 14px;\r\n  color: #666;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.page-controls button {\r\n  padding: 4px 10px;\r\n  border: 1px solid #ddd;\r\n  background: white;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.page-controls button:hover:not(:disabled) {\r\n  background: #667eea;\r\n  color: white;\r\n  border-color: #667eea;\r\n}\r\n\r\n.page-controls button:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.pdf-container {\r\n  flex: 1;\r\n  position: relative;\r\n}\r\n\r\n.pdf-iframe {\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 500px;\r\n  border: none;\r\n}\r\n\r\n.pdf-placeholder {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #666;\r\n}\r\n\r\n/* 右边 LaTeX 区域 */\r\n.latex-viewer {\r\n  flex: 1;\r\n  border: 1px solid #ddd;\r\n  background: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.latex-header {\r\n  padding: 12px;\r\n  border-bottom: 1px solid #eee;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.latex-header h3 {\r\n  margin: 0;\r\n  font-size: 16px;\r\n}\r\n\r\n.latex-lines {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\r\n  font-size: 13px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.latex-line {\r\n  padding: 4px 12px;\r\n  display: flex;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n  border-left: 3px solid transparent;\r\n}\r\n\r\n.latex-line:hover {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.latex-line.highlighted {\r\n  background-color: #e3f2fd;\r\n  border-left-color: #2196f3;\r\n}\r\n\r\n.line-number {\r\n  min-width: 40px;\r\n  color: #7f8c8d;\r\n  font-size: 11px;\r\n  user-select: none;\r\n}\r\n\r\n.line-content {\r\n  flex: 1;\r\n  white-space: pre-wrap;\r\n  word-break: break-all;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .results-container {\r\n    flex-direction: column;\r\n    height: auto;\r\n  }\r\n  \r\n  .pdf-viewer, .latex-viewer {\r\n    height: 400px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}