{"ast":null,"code":"import { createStore } from 'vuex';\nimport api from './services/api'; // ✅ 现在 api.uploadFile 可用了\n\nexport default createStore({\n  state: {\n    uploadStatus: '',\n    // uploading / success / failed\n    ocrResults: null,\n    error: null\n  },\n  mutations: {\n    setUploadStatus(state, status) {\n      state.uploadStatus = status;\n    },\n    setOcrResults(state, results) {\n      state.ocrResults = results;\n    },\n    setError(state, error) {\n      state.error = error;\n    },\n    resetState(state) {\n      state.uploadStatus = '';\n      state.ocrResults = null;\n      state.error = null;\n    }\n  },\n  actions: {\n    async uploadFile({\n      commit\n    }, file) {\n      // ✅ 注意参数名，这里直接接收 File 对象\n      commit('resetState');\n      commit('setUploadStatus', 'uploading');\n      try {\n        const response = await api.uploadFile(file); // ✅ 直接传 file 即可\n\n        let result;\n        if (typeof response.data === 'object') {\n          result = response.data;\n        } else if (typeof response.data === 'string') {\n          try {\n            result = JSON.parse(response.data);\n          } catch {\n            result = response.data;\n          }\n        } else {\n          result = String(response.data);\n        }\n        commit('setOcrResults', {\n          ext: result.content || '',\n          // API 返回 content，改成 text\n          pages: result.pages || [],\n          image: result.image_bytes || ''\n        });\n        commit('setUploadStatus', 'success');\n      } catch (error) {\n        console.error('Upload failed:', error);\n        let errMsg = 'An error occurred!';\n        if (error.response?.data) {\n          if (typeof error.response.data === 'string') {\n            errMsg = error.response.data;\n          } else if (error.response.data.message) {\n            errMsg = error.response.data.message;\n          }\n        } else if (error.message) {\n          errMsg = error.message;\n        }\n        commit('setError', errMsg);\n        commit('setUploadStatus', 'failed');\n      }\n    }\n  }\n});","map":{"version":3,"names":["createStore","api","state","uploadStatus","ocrResults","error","mutations","setUploadStatus","status","setOcrResults","results","setError","resetState","actions","uploadFile","commit","file","response","result","data","JSON","parse","String","ext","content","pages","image","image_bytes","console","errMsg","message"],"sources":["D:/OCR/ocr/src/store.js"],"sourcesContent":["import { createStore } from 'vuex'\r\nimport api from './services/api'   // ✅ 现在 api.uploadFile 可用了\r\n\r\nexport default createStore({\r\n  state: {\r\n    uploadStatus: '',   // uploading / success / failed\r\n    ocrResults: null,\r\n    error: null\r\n  },\r\n  mutations: {\r\n    setUploadStatus(state, status) {\r\n      state.uploadStatus = status\r\n    },\r\n    setOcrResults(state, results) {\r\n      state.ocrResults = results\r\n    },\r\n    setError(state, error) {\r\n      state.error = error\r\n    },\r\n    resetState(state) {\r\n      state.uploadStatus = ''\r\n      state.ocrResults = null\r\n      state.error = null\r\n    }\r\n  },\r\n  actions: {\r\n    async uploadFile({ commit }, file) {   // ✅ 注意参数名，这里直接接收 File 对象\r\n      commit('resetState')\r\n      commit('setUploadStatus', 'uploading')\r\n\r\n      try {\r\n        const response = await api.uploadFile(file)  // ✅ 直接传 file 即可\r\n\r\n        let result\r\n        if (typeof response.data === 'object') {\r\n          result = response.data\r\n        } else if (typeof response.data === 'string') {\r\n          try {\r\n            result = JSON.parse(response.data)\r\n          } catch {\r\n            result = response.data\r\n          }\r\n        } else {\r\n          result = String(response.data)\r\n        }\r\n\r\n        commit('setOcrResults', {\r\n           ext: result.content || '',         // API 返回 content，改成 text\r\n           pages: result.pages || [],\r\n           image: result.image_bytes || ''\r\n        })\r\n        commit('setUploadStatus', 'success')\r\n      } catch (error) {\r\n        console.error('Upload failed:', error)\r\n\r\n        let errMsg = 'An error occurred!'\r\n        if (error.response?.data) {\r\n          if (typeof error.response.data === 'string') {\r\n            errMsg = error.response.data\r\n          } else if (error.response.data.message) {\r\n            errMsg = error.response.data.message\r\n          }\r\n        } else if (error.message) {\r\n          errMsg = error.message\r\n        }\r\n\r\n        commit('setError', errMsg)\r\n        commit('setUploadStatus', 'failed')\r\n      }\r\n    }\r\n  }\r\n})\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,GAAG,MAAM,gBAAgB,EAAG;;AAEnC,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,YAAY,EAAE,EAAE;IAAI;IACpBC,UAAU,EAAE,IAAI;IAChBC,KAAK,EAAE;EACT,CAAC;EACDC,SAAS,EAAE;IACTC,eAAeA,CAACL,KAAK,EAAEM,MAAM,EAAE;MAC7BN,KAAK,CAACC,YAAY,GAAGK,MAAM;IAC7B,CAAC;IACDC,aAAaA,CAACP,KAAK,EAAEQ,OAAO,EAAE;MAC5BR,KAAK,CAACE,UAAU,GAAGM,OAAO;IAC5B,CAAC;IACDC,QAAQA,CAACT,KAAK,EAAEG,KAAK,EAAE;MACrBH,KAAK,CAACG,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDO,UAAUA,CAACV,KAAK,EAAE;MAChBA,KAAK,CAACC,YAAY,GAAG,EAAE;MACvBD,KAAK,CAACE,UAAU,GAAG,IAAI;MACvBF,KAAK,CAACG,KAAK,GAAG,IAAI;IACpB;EACF,CAAC;EACDQ,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAC;MAAEC;IAAO,CAAC,EAAEC,IAAI,EAAE;MAAI;MACrCD,MAAM,CAAC,YAAY,CAAC;MACpBA,MAAM,CAAC,iBAAiB,EAAE,WAAW,CAAC;MAEtC,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMhB,GAAG,CAACa,UAAU,CAACE,IAAI,CAAC,EAAE;;QAE7C,IAAIE,MAAM;QACV,IAAI,OAAOD,QAAQ,CAACE,IAAI,KAAK,QAAQ,EAAE;UACrCD,MAAM,GAAGD,QAAQ,CAACE,IAAI;QACxB,CAAC,MAAM,IAAI,OAAOF,QAAQ,CAACE,IAAI,KAAK,QAAQ,EAAE;UAC5C,IAAI;YACFD,MAAM,GAAGE,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAAC;UACpC,CAAC,CAAC,MAAM;YACND,MAAM,GAAGD,QAAQ,CAACE,IAAI;UACxB;QACF,CAAC,MAAM;UACLD,MAAM,GAAGI,MAAM,CAACL,QAAQ,CAACE,IAAI,CAAC;QAChC;QAEAJ,MAAM,CAAC,eAAe,EAAE;UACrBQ,GAAG,EAAEL,MAAM,CAACM,OAAO,IAAI,EAAE;UAAU;UACnCC,KAAK,EAAEP,MAAM,CAACO,KAAK,IAAI,EAAE;UACzBC,KAAK,EAAER,MAAM,CAACS,WAAW,IAAI;QAChC,CAAC,CAAC;QACFZ,MAAM,CAAC,iBAAiB,EAAE,SAAS,CAAC;MACtC,CAAC,CAAC,OAAOV,KAAK,EAAE;QACduB,OAAO,CAACvB,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;QAEtC,IAAIwB,MAAM,GAAG,oBAAoB;QACjC,IAAIxB,KAAK,CAACY,QAAQ,EAAEE,IAAI,EAAE;UACxB,IAAI,OAAOd,KAAK,CAACY,QAAQ,CAACE,IAAI,KAAK,QAAQ,EAAE;YAC3CU,MAAM,GAAGxB,KAAK,CAACY,QAAQ,CAACE,IAAI;UAC9B,CAAC,MAAM,IAAId,KAAK,CAACY,QAAQ,CAACE,IAAI,CAACW,OAAO,EAAE;YACtCD,MAAM,GAAGxB,KAAK,CAACY,QAAQ,CAACE,IAAI,CAACW,OAAO;UACtC;QACF,CAAC,MAAM,IAAIzB,KAAK,CAACyB,OAAO,EAAE;UACxBD,MAAM,GAAGxB,KAAK,CAACyB,OAAO;QACxB;QAEAf,MAAM,CAAC,UAAU,EAAEc,MAAM,CAAC;QAC1Bd,MAAM,CAAC,iBAAiB,EAAE,QAAQ,CAAC;MACrC;IACF;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}