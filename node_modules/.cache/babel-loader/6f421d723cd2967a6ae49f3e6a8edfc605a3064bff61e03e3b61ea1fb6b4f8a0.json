{"ast":null,"code":"export default {\n  name: 'App',\n  data() {\n    return {\n      pdfSource: '',\n      latexLines: [],\n      currentPage: 1,\n      totalPages: 0,\n      hoveredLine: null,\n      activeLine: null,\n      textPositions: []\n    };\n  },\n  methods: {\n    async handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file && file.type === 'application/pdf') {\n        // 创建对象URL用于显示PDF\n        this.pdfSource = URL.createObjectURL(file);\n\n        // 模拟获取PDF页数（实际应用中需要通过API获取）\n        this.totalPages = await this.getPdfPageCount(file);\n\n        // 处理PDF并获取LaTeX输出\n        await this.processPDFWithNougat(file);\n      }\n    },\n    async getPdfPageCount(file) {\n      // 简单模拟，实际应用中需要更准确的页数获取\n      return 5;\n    },\n    async processPDFWithNougat() {\n      // 这里应该调用Nougat API处理PDF\n      // 暂时使用模拟数据\n      this.simulateNougatOutput();\n    },\n    handleLineHover(lineIndex) {\n      this.hoveredLine = lineIndex;\n      this.scrollToCorrespondingPosition(lineIndex);\n    },\n    handleLineLeave() {\n      this.hoveredLine = null;\n    },\n    handleLineClick(lineIndex) {\n      this.activeLine = lineIndex;\n      this.scrollToCorrespondingPosition(lineIndex);\n    },\n    scrollToCorrespondingPosition(lineIndex) {\n      // 简单的页面映射逻辑\n      const targetPage = Math.floor(lineIndex / 10) + 1;\n      if (targetPage >= 1 && targetPage <= this.totalPages) {\n        this.currentPage = targetPage;\n        // 在实际应用中，这里需要控制iframe的页面切换\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        // 在实际应用中，这里需要控制iframe的页面切换\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        // 在实际应用中，这里需要控制iframe的页面切换\n      }\n    },\n    copyLaTeX() {\n      const text = this.latexLines.join('\\n');\n      navigator.clipboard.writeText(text).then(() => {\n        alert('LaTeX内容已复制到剪贴板');\n      }).catch(() => {\n        // 备用方案\n        const textArea = document.createElement('textarea');\n        textArea.value = text;\n        document.body.appendChild(textArea);\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n        alert('LaTeX内容已复制到剪贴板');\n      });\n    },\n    downloadLaTeX() {\n      const text = this.latexLines.join('\\n');\n      const blob = new Blob([text], {\n        type: 'text/plain'\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'output.tex';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    },\n    simulateNougatOutput() {\n      // 模拟Nougat处理结果\n      this.latexLines = ['\\\\documentclass{article}', '\\\\usepackage{amsmath}', '\\\\usepackage{amssymb}', '\\\\begin{document}', '\\\\title{OCR智能平台技术文档}', '\\\\author{OCR Team}', '\\\\date{\\\\today}', '\\\\maketitle', '', '\\\\section{引言}', 'OCR（光学字符识别）技术在现代文档处理中扮演着重要角色。', '本文介绍基于Nougat的智能OCR平台实现方案。', '', '\\\\section{技术架构}', '\\\\subsection{PDF解析模块}', 'PDF解析使用浏览器原生PDF渲染，支持高质量的文档显示。', '数学公式：$E = mc^2$', '矩阵表示：', '\\\\[', '\\\\begin{bmatrix}', 'a & b \\\\\\\\', 'c & d', '\\\\end{bmatrix}', '\\\\]', '', '\\\\subsection{LaTeX生成模块}', '基于Nougat模型，实现PDF到LaTeX的智能转换。', '支持复杂的数学公式和学术文档结构。', '', '\\\\section{实验结果}', '准确率达到98.7\\\\%，处理速度较传统方案提升3倍。', '\\\\end{document}'];\n    }\n  }\n};","map":{"version":3,"names":["name","data","pdfSource","latexLines","currentPage","totalPages","hoveredLine","activeLine","textPositions","methods","handleFileUpload","event","file","target","files","type","URL","createObjectURL","getPdfPageCount","processPDFWithNougat","simulateNougatOutput","handleLineHover","lineIndex","scrollToCorrespondingPosition","handleLineLeave","handleLineClick","targetPage","Math","floor","prevPage","nextPage","copyLaTeX","text","join","navigator","clipboard","writeText","then","alert","catch","textArea","document","createElement","value","body","appendChild","select","execCommand","removeChild","downloadLaTeX","blob","Blob","url","a","href","download","click","revokeObjectURL"],"sources":["D:\\OCR\\ocr\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <!-- 顶部导航栏 -->\r\n    <header class=\"navbar\">\r\n      <div class=\"nav-container\">\r\n        <div class=\"nav-logo\">\r\n          <router-link to=\"/\" class=\"logo-link\">\r\n            <h1>OCR智能平台</h1>\r\n          </router-link>\r\n        </div>\r\n        <nav class=\"nav-menu\">\r\n          <router-link to=\"/\" class=\"nav-item\">首页</router-link>\r\n          <router-link to=\"/pdf-splitter\" class=\"nav-item\">PDF切割</router-link>\r\n          <router-link to=\"/about\" class=\"nav-item\">关于我们</router-link>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n\r\n    <!-- 主体内容区域 -->\r\n    <main class=\"main-content\">\r\n      <div class=\"ocr-container\">\r\n        <!-- 文件上传区域 -->\r\n        <div class=\"upload-section\">\r\n          <div class=\"upload-card\">\r\n            <input\r\n              type=\"file\"\r\n              id=\"pdf-upload\"\r\n              accept=\".pdf\"\r\n              @change=\"handleFileUpload\"\r\n              class=\"file-input\"\r\n            />\r\n            <label for=\"pdf-upload\" class=\"upload-label\">\r\n              <div class=\"upload-icon\">\r\n                <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                  <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n                  <polyline points=\"17 8 12 3 7 8\"></polyline>\r\n                  <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\"></line>\r\n                </svg>\r\n              </div>\r\n              <h3>上传PDF文件</h3>\r\n              <p>支持所有标准的PDF文档格式</p>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- PDF和LaTeX显示区域 -->\r\n        <div v-if=\"pdfSource\" class=\"display-section\">\r\n          <div class=\"split-view\">\r\n            <!-- 左侧PDF渲染 -->\r\n            <div class=\"pdf-panel\">\r\n              <div class=\"panel-header\">\r\n                <h3>PDF预览</h3>\r\n                <div class=\"page-controls\" v-if=\"totalPages > 0\">\r\n                  <button @click=\"prevPage\" :disabled=\"currentPage <= 1\">上一页</button>\r\n                  <span>第 {{ currentPage }} 页 / 共 {{ totalPages }} 页</span>\r\n                  <button @click=\"nextPage\" :disabled=\"currentPage >= totalPages\">下一页</button>\r\n                </div>\r\n              </div>\r\n              <div class=\"pdf-container\">\r\n                <iframe\r\n                  v-if=\"pdfSource\"\r\n                  :src=\"pdfSource\"\r\n                  class=\"pdf-iframe\"\r\n                  frameborder=\"0\"\r\n                ></iframe>\r\n                <div v-else class=\"pdf-placeholder\">\r\n                  <p>请上传PDF文件</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 右侧LaTeX输出 -->\r\n            <div class=\"latex-panel\">\r\n              <div class=\"panel-header\">\r\n                <h3>Nougat LaTeX 输出</h3>\r\n                <div class=\"latex-controls\">\r\n                  <button @click=\"copyLaTeX\" class=\"copy-btn\">复制全部</button>\r\n                  <button @click=\"downloadLaTeX\" class=\"download-btn\">下载</button>\r\n                </div>\r\n              </div>\r\n              <div class=\"latex-output\">\r\n                <div\r\n                  v-for=\"(line, index) in latexLines\"\r\n                  :key=\"index\"\r\n                  class=\"latex-line\"\r\n                  :class=\"{ \r\n                    'highlighted': hoveredLine === index,\r\n                    'active': activeLine === index\r\n                  }\"\r\n                  @mouseenter=\"handleLineHover(index)\"\r\n                  @mouseleave=\"handleLineLeave\"\r\n                  @click=\"handleLineClick(index)\"\r\n                >\r\n                  <span class=\"line-number\">{{ index + 1 }}</span>\r\n                  <span class=\"line-content\">{{ line }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n\r\n    <!-- 底部栏 -->\r\n    <footer class=\"footer\">\r\n      <div class=\"footer-container\">\r\n        <div class=\"footer-section\">\r\n          <h3>OCR智能平台</h3>\r\n          <p>高效、准确的文字识别解决方案</p>\r\n        </div>\r\n        <div class=\"footer-section\">\r\n          <h4>功能特色</h4>\r\n          <ul>\r\n            <li>图片文字识别</li>\r\n            <li>PDF文档处理</li>\r\n            <li>多语言支持</li>\r\n            <li>批量处理</li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"footer-section\">\r\n          <h4>联系我们</h4>\r\n          <p>Email: support@ocr-platform.com</p>\r\n          <p>技术支持: 400-123-4567</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"footer-bottom\">\r\n        <p>&copy; 2024 OCR智能平台. 保留所有权利。</p>\r\n      </div>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'App',\r\n  data() {\r\n    return {\r\n      pdfSource: '',\r\n      latexLines: [],\r\n      currentPage: 1,\r\n      totalPages: 0,\r\n      hoveredLine: null,\r\n      activeLine: null,\r\n      textPositions: []\r\n    }\r\n  },\r\n  methods: {\r\n    async handleFileUpload(event) {\r\n      const file = event.target.files[0]\r\n      if (file && file.type === 'application/pdf') {\r\n        // 创建对象URL用于显示PDF\r\n        this.pdfSource = URL.createObjectURL(file)\r\n        \r\n        // 模拟获取PDF页数（实际应用中需要通过API获取）\r\n        this.totalPages = await this.getPdfPageCount(file)\r\n        \r\n        // 处理PDF并获取LaTeX输出\r\n        await this.processPDFWithNougat(file)\r\n      }\r\n    },\r\n\r\n    async getPdfPageCount(file) {\r\n      // 简单模拟，实际应用中需要更准确的页数获取\r\n      return 5\r\n    },\r\n\r\n    async processPDFWithNougat() {\r\n      // 这里应该调用Nougat API处理PDF\r\n      // 暂时使用模拟数据\r\n      this.simulateNougatOutput()\r\n    },\r\n\r\n    handleLineHover(lineIndex) {\r\n      this.hoveredLine = lineIndex\r\n      this.scrollToCorrespondingPosition(lineIndex)\r\n    },\r\n\r\n    handleLineLeave() {\r\n      this.hoveredLine = null\r\n    },\r\n\r\n    handleLineClick(lineIndex) {\r\n      this.activeLine = lineIndex\r\n      this.scrollToCorrespondingPosition(lineIndex)\r\n    },\r\n\r\n    scrollToCorrespondingPosition(lineIndex) {\r\n      // 简单的页面映射逻辑\r\n      const targetPage = Math.floor(lineIndex / 10) + 1\r\n      if (targetPage >= 1 && targetPage <= this.totalPages) {\r\n        this.currentPage = targetPage\r\n        // 在实际应用中，这里需要控制iframe的页面切换\r\n      }\r\n    },\r\n\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--\r\n        // 在实际应用中，这里需要控制iframe的页面切换\r\n      }\r\n    },\r\n\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++\r\n        // 在实际应用中，这里需要控制iframe的页面切换\r\n      }\r\n    },\r\n\r\n    copyLaTeX() {\r\n      const text = this.latexLines.join('\\n')\r\n      navigator.clipboard.writeText(text).then(() => {\r\n        alert('LaTeX内容已复制到剪贴板')\r\n      }).catch(() => {\r\n        // 备用方案\r\n        const textArea = document.createElement('textarea')\r\n        textArea.value = text\r\n        document.body.appendChild(textArea)\r\n        textArea.select()\r\n        document.execCommand('copy')\r\n        document.body.removeChild(textArea)\r\n        alert('LaTeX内容已复制到剪贴板')\r\n      })\r\n    },\r\n\r\n    downloadLaTeX() {\r\n      const text = this.latexLines.join('\\n')\r\n      const blob = new Blob([text], { type: 'text/plain' })\r\n      const url = URL.createObjectURL(blob)\r\n      const a = document.createElement('a')\r\n      a.href = url\r\n      a.download = 'output.tex'\r\n      document.body.appendChild(a)\r\n      a.click()\r\n      document.body.removeChild(a)\r\n      URL.revokeObjectURL(url)\r\n    },\r\n\r\n    simulateNougatOutput() {\r\n      // 模拟Nougat处理结果\r\n      this.latexLines = [\r\n        '\\\\documentclass{article}',\r\n        '\\\\usepackage{amsmath}',\r\n        '\\\\usepackage{amssymb}',\r\n        '\\\\begin{document}',\r\n        '\\\\title{OCR智能平台技术文档}',\r\n        '\\\\author{OCR Team}',\r\n        '\\\\date{\\\\today}',\r\n        '\\\\maketitle',\r\n        '',\r\n        '\\\\section{引言}',\r\n        'OCR（光学字符识别）技术在现代文档处理中扮演着重要角色。',\r\n        '本文介绍基于Nougat的智能OCR平台实现方案。',\r\n        '',\r\n        '\\\\section{技术架构}',\r\n        '\\\\subsection{PDF解析模块}',\r\n        'PDF解析使用浏览器原生PDF渲染，支持高质量的文档显示。',\r\n        '数学公式：$E = mc^2$',\r\n        '矩阵表示：',\r\n        '\\\\[',\r\n        '\\\\begin{bmatrix}',\r\n        'a & b \\\\\\\\',\r\n        'c & d',\r\n        '\\\\end{bmatrix}',\r\n        '\\\\]',\r\n        '',\r\n        '\\\\subsection{LaTeX生成模块}',\r\n        '基于Nougat模型，实现PDF到LaTeX的智能转换。',\r\n        '支持复杂的数学公式和学术文档结构。',\r\n        '',\r\n        '\\\\section{实验结果}',\r\n        '准确率达到98.7\\\\%，处理速度较传统方案提升3倍。',\r\n        '\\\\end{document}'\r\n      ]\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n#app {\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: #2c3e50;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n/* 顶部导航栏样式 */\r\n.navbar {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 1000;\r\n}\r\n\r\n.nav-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 0 2rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 70px;\r\n}\r\n\r\n.nav-logo .logo-link {\r\n  text-decoration: none;\r\n  color: white;\r\n}\r\n\r\n.nav-logo h1 {\r\n  font-size: 1.8rem;\r\n  font-weight: 700;\r\n}\r\n\r\n.nav-menu {\r\n  display: flex;\r\n  gap: 2rem;\r\n}\r\n\r\n.nav-item {\r\n  color: white;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 8px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.nav-item:hover {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.nav-item.router-link-active {\r\n  background: rgba(255, 255, 255, 0.2);\r\n  font-weight: 600;\r\n}\r\n\r\n/* 主体内容区域 */\r\n.main-content {\r\n  flex: 1;\r\n  background: #f8f9fa;\r\n  min-height: calc(100vh - 70px - 200px);\r\n  padding: 2rem;\r\n}\r\n\r\n.ocr-container {\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n}\r\n\r\n/* 上传区域 */\r\n.upload-section {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.upload-card {\r\n  background: white;\r\n  border: 2px dashed #ddd;\r\n  border-radius: 12px;\r\n  padding: 3rem;\r\n  text-align: center;\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n}\r\n\r\n.upload-card:hover {\r\n  border-color: #667eea;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.file-input {\r\n  display: none;\r\n}\r\n\r\n.upload-label {\r\n  cursor: pointer;\r\n}\r\n\r\n.upload-icon {\r\n  color: #667eea;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.upload-label h3 {\r\n  margin-bottom: 0.5rem;\r\n  color: #2c3e50;\r\n}\r\n\r\n.upload-label p {\r\n  color: #7f8c8d;\r\n}\r\n\r\n/* 分割视图 */\r\n.display-section {\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 20px rgba(0,0,0,0.1);\r\n  overflow: hidden;\r\n}\r\n\r\n.split-view {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  height: 600px;\r\n}\r\n\r\n.pdf-panel, .latex-panel {\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-right: 1px solid #eee;\r\n}\r\n\r\n.latex-panel {\r\n  border-right: none;\r\n}\r\n\r\n.panel-header {\r\n  padding: 1rem 1.5rem;\r\n  background: #f8f9fa;\r\n  border-bottom: 1px solid #eee;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.panel-header h3 {\r\n  color: #2c3e50;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.page-controls, .latex-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.page-controls button, .copy-btn, .download-btn {\r\n  padding: 0.5rem 1rem;\r\n  border: 1px solid #ddd;\r\n  background: white;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.page-controls button:hover:not(:disabled), \r\n.copy-btn:hover, \r\n.download-btn:hover {\r\n  background: #667eea;\r\n  color: white;\r\n  border-color: #667eea;\r\n}\r\n\r\n.page-controls button:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* PDF容器 */\r\n.pdf-container {\r\n  flex: 1;\r\n  overflow: auto;\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.pdf-iframe {\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 500px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n}\r\n\r\n.pdf-placeholder {\r\n  color: #7f8c8d;\r\n  text-align: center;\r\n}\r\n\r\n/* LaTeX输出 */\r\n.latex-output {\r\n  flex: 1;\r\n  overflow: auto;\r\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\r\n  font-size: 13px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.latex-line {\r\n  padding: 4px 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-left: 3px solid transparent;\r\n  transition: all 0.2s ease;\r\n  cursor: pointer;\r\n}\r\n\r\n.latex-line:hover {\r\n  background: #f8f9fa;\r\n}\r\n\r\n.latex-line.highlighted {\r\n  background: #e3f2fd;\r\n  border-left-color: #2196f3;\r\n}\r\n\r\n.latex-line.active {\r\n  background: #bbdefb;\r\n  border-left-color: #1976d2;\r\n}\r\n\r\n.line-number {\r\n  min-width: 40px;\r\n  color: #7f8c8d;\r\n  font-size: 11px;\r\n  user-select: none;\r\n}\r\n\r\n.line-content {\r\n  flex: 1;\r\n  white-space: pre-wrap;\r\n  word-break: break-all;\r\n}\r\n\r\n/* 底部栏样式 */\r\n.footer {\r\n  background: #2c3e50;\r\n  color: white;\r\n  margin-top: auto;\r\n}\r\n\r\n.footer-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 3rem 2rem 1rem;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 2rem;\r\n}\r\n\r\n.footer-section h3 {\r\n  color: #3498db;\r\n  margin-bottom: 1rem;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.footer-section h4 {\r\n  color: #ecf0f1;\r\n  margin-bottom: 1rem;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.footer-section p {\r\n  line-height: 1.6;\r\n  color: #bdc3c7;\r\n}\r\n\r\n.footer-section ul {\r\n  list-style: none;\r\n}\r\n\r\n.footer-section li {\r\n  padding: 0.3rem 0;\r\n  color: #bdc3c7;\r\n}\r\n\r\n.footer-bottom {\r\n  border-top: 1px solid #34495e;\r\n  padding: 1rem 2rem;\r\n  text-align: center;\r\n  color: #95a5a6;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .nav-container {\r\n    flex-direction: column;\r\n    height: auto;\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .nav-menu {\r\n    margin-top: 1rem;\r\n  }\r\n  \r\n  .split-view {\r\n    grid-template-columns: 1fr;\r\n    height: auto;\r\n  }\r\n  \r\n  .pdf-panel, .latex-panel {\r\n    height: 400px;\r\n  }\r\n  \r\n  .footer-container {\r\n    grid-template-columns: 1fr;\r\n    text-align: center;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}