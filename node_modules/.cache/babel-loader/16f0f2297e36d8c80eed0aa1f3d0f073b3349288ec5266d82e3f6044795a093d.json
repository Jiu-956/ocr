{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"results\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"results-container\"\n};\nconst _hoisted_3 = {\n  class: \"container\"\n};\nconst _hoisted_4 = {\n  class: \"pdf-container\",\n  ref: \"pdfContainer\"\n};\nconst _hoisted_5 = {\n  class: \"latex-container\",\n  ref: \"latexContainer\"\n};\nconst _hoisted_6 = [\"onMouseover\"];\nconst _hoisted_7 = [\"innerHTML\"];\nconst _hoisted_8 = {\n  key: 1,\n  class: \"no-results\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"OCR Results\", -1 /* CACHED */)), _ctx.ocrResults ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" 左边 PDF 渲染 \"), _createElementVNode(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */), _createCommentVNode(\" 右边 LaTeX 渲染 \"), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.latexLines, (line, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"latex-line\",\n      onMouseover: $event => $options.highlightLine(index)\n    }, [_createElementVNode(\"span\", {\n      innerHTML: line\n    }, null, 8 /* PROPS */, _hoisted_7)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */)])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _cache[1] || (_cache[1] = [_createElementVNode(\"p\", null, \"No results to display.\", -1 /* CACHED */)]))), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goBack && $options.goBack(...args)),\n    class: \"back-button\"\n  }, \"Process Another File\")]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_ctx","ocrResults","_hoisted_2","_hoisted_3","_createCommentVNode","_hoisted_4","_hoisted_5","_Fragment","_renderList","$data","latexLines","line","index","key","onMouseover","$event","$options","highlightLine","innerHTML","_hoisted_7","_hoisted_8","_cache","onClick","args","goBack"],"sources":["D:\\OCR\\ocr\\src\\views\\Results.vue"],"sourcesContent":["<template>\r\n  <div class=\"results\">\r\n    <h2>OCR Results</h2>\r\n\r\n    <div v-if=\"ocrResults\" class=\"results-container\">\r\n      <div class=\"container\">\r\n        <!-- 左边 PDF 渲染 -->\r\n        <div class=\"pdf-container\" ref=\"pdfContainer\"></div>\r\n\r\n        <!-- 右边 LaTeX 渲染 -->\r\n        <div class=\"latex-container\" ref=\"latexContainer\">\r\n          <div\r\n            v-for=\"(line, index) in latexLines\"\r\n            :key=\"index\"\r\n            class=\"latex-line\"\r\n            @mouseover=\"highlightLine(index)\"\r\n          >\r\n            <span v-html=\"line\"></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else class=\"no-results\">\r\n      <p>No results to display.</p>\r\n    </div>\r\n\r\n    <button @click=\"goBack\" class=\"back-button\">Process Another File</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\nimport * as pdfjsLib from \"pdfjs-dist\";\r\nimport \"pdfjs-dist/web/pdf_viewer.css\";\r\n\r\nexport default {\r\n  name: \"OcrResults\",\r\n  computed: {\r\n    ...mapState([\"ocrResults\"]),\r\n  },\r\n  data() {\r\n    return {\r\n      pdfDoc: null,\r\n      latexLines: [],\r\n      pageViews: [],\r\n    };\r\n  },\r\n  async mounted() {\r\n    if (this.ocrResults?.file) {\r\n      // 渲染 PDF\r\n      await this.loadPDF(this.ocrResults.file);\r\n      // 渲染 LaTeX\r\n      if (this.ocrResults.latex) {\r\n        await this.loadLatex(this.ocrResults.latex);\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    goBack() {\r\n      this.$store.commit(\"resetState\");\r\n      this.$router.push(\"/\");\r\n    },\r\n\r\n    async loadPDF(file) {\r\n      const arrayBuffer = await file.arrayBuffer();\r\n      const loadingTask = pdfjsLib.getDocument({ data: arrayBuffer });\r\n      this.pdfDoc = await loadingTask.promise;\r\n\r\n      const container = this.$refs.pdfContainer;\r\n      container.innerHTML = \"\";\r\n      this.pageViews = [];\r\n\r\n      for (let i = 1; i <= this.pdfDoc.numPages; i++) {\r\n        const page = await this.pdfDoc.getPage(i);\r\n        const viewport = page.getViewport({ scale: 1.5 });\r\n\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = viewport.width;\r\n        canvas.height = viewport.height;\r\n        container.appendChild(canvas);\r\n\r\n        const context = canvas.getContext(\"2d\");\r\n        await page.render({ canvasContext: context, viewport }).promise;\r\n\r\n        this.pageViews.push({ canvas, viewport });\r\n      }\r\n    },\r\n\r\n    async loadLatex(latexArray) {\r\n      // 用 MathJax 渲染 LaTeX\r\n      this.latexLines = latexArray.map(\r\n        (line) => window.MathJax.tex2chtml(line).outerHTML\r\n      );\r\n    },\r\n\r\n    highlightLine(index) {\r\n      const pageIndex = Math.min(index, this.pageViews.length - 1);\r\n      const canvas = this.pageViews[pageIndex].canvas;\r\n\r\n      // 滚动到对应页\r\n      canvas.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n\r\n      // 高亮边框\r\n      this.pageViews.forEach((pv) => (pv.canvas.style.border = \"none\"));\r\n      canvas.style.border = \"2px solid red\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.results-container {\r\n  text-align: left;\r\n  margin: 2rem 0;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  height: 80vh;\r\n}\r\n\r\n.pdf-container {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  background: #f0f0f0;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.latex-container {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 10px;\r\n}\r\n\r\n.latex-line {\r\n  padding: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.latex-line:hover {\r\n  background: #ffff99;\r\n}\r\n\r\n.no-results {\r\n  margin: 2rem 0;\r\n  color: #666;\r\n}\r\n\r\n.back-button {\r\n  margin-top: 2rem;\r\n  background-color: #42b983;\r\n  color: white;\r\n  border: none;\r\n  padding: 0.75rem 1.5rem;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n}\r\n\r\n.back-button:hover {\r\n  background-color: #3aa876;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAS;;;EAGKA,KAAK,EAAC;;;EACtBA,KAAK,EAAC;AAAW;;EAEfA,KAAK,EAAC,eAAe;EAACC,GAAG,EAAC;;;EAG1BD,KAAK,EAAC,iBAAiB;EAACC,GAAG,EAAC;;;;;;EAazBD,KAAK,EAAC;;;uBAtBpBE,mBAAA,CA2BM,OA3BNC,UA2BM,G,0BA1BJC,mBAAA,CAAoB,YAAhB,aAAW,qBAEJC,IAAA,CAAAC,UAAU,I,cAArBJ,mBAAA,CAiBM,OAjBNK,UAiBM,GAhBJH,mBAAA,CAeM,OAfNI,UAeM,GAdJC,mBAAA,eAAkB,EAClBL,mBAAA,CAAoD,OAApDM,UAAoD,+BAEpDD,mBAAA,iBAAoB,EACpBL,mBAAA,CASM,OATNO,UASM,I,kBARJT,mBAAA,CAOMU,SAAA,QAAAC,WAAA,CANoBC,KAAA,CAAAC,UAAU,GAA1BC,IAAI,EAAEC,KAAK;yBADrBf,mBAAA,CAOM;MALHgB,GAAG,EAAED,KAAK;MACXjB,KAAK,EAAC,YAAY;MACjBmB,WAAS,EAAAC,MAAA,IAAEC,QAAA,CAAAC,aAAa,CAACL,KAAK;QAE/Bb,mBAAA,CAA2B;MAArBmB,SAAa,EAALP;IAAI,wBAAAQ,UAAA,E;+EAM1BtB,mBAAA,CAEM,OAFNuB,UAEM,EAAAC,MAAA,QAAAA,MAAA,OADJtB,mBAAA,CAA6B,WAA1B,wBAAsB,mB,KAG3BA,mBAAA,CAAyE;IAAhEuB,OAAK,EAAAD,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEP,QAAA,CAAAQ,MAAA,IAAAR,QAAA,CAAAQ,MAAA,IAAAD,IAAA,CAAM;IAAE5B,KAAK,EAAC;KAAc,sBAAoB,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}