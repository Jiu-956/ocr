{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nimport { mapState } from \"vuex\";\nimport * as pdfjsLib from \"pdfjs-dist\";\nexport default {\n  name: \"Results\",\n  computed: {\n    ...mapState([\"ocrResults\"]),\n    latexLines() {\n      // 把 Nougat 输出按行切分\n      return this.ocrResults?.text ? this.ocrResults.text.split(\"\\n\") : [];\n    }\n  },\n  setup(props, {\n    root\n  }) {\n    const pdfContainer = ref(null);\n    const pdfDoc = ref(null);\n    onMounted(async () => {\n      if (root.$store.state.ocrResults?.pdfUrl) {\n        // 加载 PDF\n        pdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n        const loadingTask = pdfjsLib.getDocument(root.$store.state.ocrResults.pdfUrl);\n        pdfDoc.value = await loadingTask.promise;\n        renderPage(1);\n      }\n    });\n    const renderPage = async num => {\n      if (!pdfDoc.value) return;\n      const page = await pdfDoc.value.getPage(num);\n      const viewport = page.getViewport({\n        scale: 1.5\n      });\n      const canvas = document.createElement(\"canvas\");\n      const context = canvas.getContext(\"2d\");\n      canvas.height = viewport.height;\n      canvas.width = viewport.width;\n      const renderContext = {\n        canvasContext: context,\n        viewport\n      };\n      await page.render(renderContext).promise;\n      pdfContainer.value.innerHTML = \"\"; // 清空旧的\n      pdfContainer.value.appendChild(canvas);\n    };\n    const scrollPdfTo = lineIndex => {\n      // 暂时：根据行数映射到一个滚动比例\n      if (pdfContainer.value) {\n        const totalLines = root.$store.state.ocrResults.text.split(\"\\n\").length;\n        const percent = lineIndex / totalLines;\n        pdfContainer.value.scrollTop = pdfContainer.value.scrollHeight * percent;\n      }\n    };\n    return {\n      pdfContainer,\n      scrollPdfTo\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","mapState","pdfjsLib","name","computed","latexLines","ocrResults","text","split","setup","props","root","pdfContainer","pdfDoc","$store","state","pdfUrl","GlobalWorkerOptions","workerSrc","version","loadingTask","getDocument","value","promise","renderPage","num","page","getPage","viewport","getViewport","scale","canvas","document","createElement","context","getContext","height","width","renderContext","canvasContext","render","innerHTML","appendChild","scrollPdfTo","lineIndex","totalLines","length","percent","scrollTop","scrollHeight"],"sources":["D:\\OCR\\ocr\\src\\views\\Results.vue"],"sourcesContent":["<template>\r\n  <div class=\"results\">\r\n    <h2>OCR Results</h2>\r\n\r\n    <div class=\"results-container\">\r\n      <!-- 左边 PDF 渲染 -->\r\n      <div ref=\"pdfContainer\" class=\"pdf-viewer\"></div>\r\n\r\n      <!-- 右边 Nougat LaTeX 输出 -->\r\n      <div class=\"latex-viewer\">\r\n        <h3>Nougat LaTeX 输出：</h3>\r\n        <pre>\r\n          <div\r\n            v-for=\"(line, index) in latexLines\"\r\n            :key=\"index\"\r\n            class=\"latex-line\"\r\n            @mouseover=\"scrollPdfTo(index)\"\r\n          >\r\n            {{ line }}\r\n          </div>\r\n        </pre>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from \"vue\"\r\nimport { mapState } from \"vuex\"\r\nimport * as pdfjsLib from \"pdfjs-dist\"\r\n\r\nexport default {\r\n  name: \"Results\",\r\n  computed: {\r\n    ...mapState([\"ocrResults\"]),\r\n    latexLines() {\r\n      // 把 Nougat 输出按行切分\r\n      return this.ocrResults?.text ? this.ocrResults.text.split(\"\\n\") : []\r\n    },\r\n  },\r\n  setup(props, { root }) {\r\n    const pdfContainer = ref(null)\r\n    const pdfDoc = ref(null)\r\n\r\n    onMounted(async () => {\r\n      if (root.$store.state.ocrResults?.pdfUrl) {\r\n        // 加载 PDF\r\n        pdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`\r\n        const loadingTask = pdfjsLib.getDocument(root.$store.state.ocrResults.pdfUrl)\r\n        pdfDoc.value = await loadingTask.promise\r\n        renderPage(1)\r\n      }\r\n    })\r\n\r\n    const renderPage = async (num) => {\r\n      if (!pdfDoc.value) return\r\n      const page = await pdfDoc.value.getPage(num)\r\n      const viewport = page.getViewport({ scale: 1.5 })\r\n\r\n      const canvas = document.createElement(\"canvas\")\r\n      const context = canvas.getContext(\"2d\")\r\n      canvas.height = viewport.height\r\n      canvas.width = viewport.width\r\n\r\n      const renderContext = { canvasContext: context, viewport }\r\n      await page.render(renderContext).promise\r\n\r\n      pdfContainer.value.innerHTML = \"\" // 清空旧的\r\n      pdfContainer.value.appendChild(canvas)\r\n    }\r\n\r\n    const scrollPdfTo = (lineIndex) => {\r\n      // 暂时：根据行数映射到一个滚动比例\r\n      if (pdfContainer.value) {\r\n        const totalLines = root.$store.state.ocrResults.text.split(\"\\n\").length\r\n        const percent = lineIndex / totalLines\r\n        pdfContainer.value.scrollTop = pdfContainer.value.scrollHeight * percent\r\n      }\r\n    }\r\n\r\n    return { pdfContainer, scrollPdfTo }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.results-container {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.pdf-viewer {\r\n  flex: 1;\r\n  height: 80vh;\r\n  overflow-y: auto;\r\n  border: 1px solid #ddd;\r\n  background: #f9f9f9;\r\n}\r\n\r\n.latex-viewer {\r\n  flex: 1;\r\n  height: 80vh;\r\n  overflow-y: auto;\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n  font-family: monospace;\r\n  background: #fff;\r\n}\r\n\r\n.latex-line {\r\n  padding: 2px 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.latex-line:hover {\r\n  background: #e0f7fa;\r\n}\r\n</style>\r\n"],"mappings":"AA2BA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAI;AACnC,SAASC,QAAO,QAAS,MAAK;AAC9B,OAAO,KAAKC,QAAO,MAAO,YAAW;AAErC,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,QAAQ,EAAE;IACR,GAAGH,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IAC3BI,UAAUA,CAAA,EAAG;MACX;MACA,OAAO,IAAI,CAACC,UAAU,EAAEC,IAAG,GAAI,IAAI,CAACD,UAAU,CAACC,IAAI,CAACC,KAAK,CAAC,IAAI,IAAI,EAAC;IACrE;EACF,CAAC;EACDC,KAAKA,CAACC,KAAK,EAAE;IAAEC;EAAK,CAAC,EAAE;IACrB,MAAMC,YAAW,GAAIb,GAAG,CAAC,IAAI;IAC7B,MAAMc,MAAK,GAAId,GAAG,CAAC,IAAI;IAEvBC,SAAS,CAAC,YAAY;MACpB,IAAIW,IAAI,CAACG,MAAM,CAACC,KAAK,CAACT,UAAU,EAAEU,MAAM,EAAE;QACxC;QACAd,QAAQ,CAACe,mBAAmB,CAACC,SAAQ,GAAI,2CAA2ChB,QAAQ,CAACiB,OAAO,oBAAmB;QACvH,MAAMC,WAAU,GAAIlB,QAAQ,CAACmB,WAAW,CAACV,IAAI,CAACG,MAAM,CAACC,KAAK,CAACT,UAAU,CAACU,MAAM;QAC5EH,MAAM,CAACS,KAAI,GAAI,MAAMF,WAAW,CAACG,OAAM;QACvCC,UAAU,CAAC,CAAC;MACd;IACF,CAAC;IAED,MAAMA,UAAS,GAAI,MAAOC,GAAG,IAAK;MAChC,IAAI,CAACZ,MAAM,CAACS,KAAK,EAAE;MACnB,MAAMI,IAAG,GAAI,MAAMb,MAAM,CAACS,KAAK,CAACK,OAAO,CAACF,GAAG;MAC3C,MAAMG,QAAO,GAAIF,IAAI,CAACG,WAAW,CAAC;QAAEC,KAAK,EAAE;MAAI,CAAC;MAEhD,MAAMC,MAAK,GAAIC,QAAQ,CAACC,aAAa,CAAC,QAAQ;MAC9C,MAAMC,OAAM,GAAIH,MAAM,CAACI,UAAU,CAAC,IAAI;MACtCJ,MAAM,CAACK,MAAK,GAAIR,QAAQ,CAACQ,MAAK;MAC9BL,MAAM,CAACM,KAAI,GAAIT,QAAQ,CAACS,KAAI;MAE5B,MAAMC,aAAY,GAAI;QAAEC,aAAa,EAAEL,OAAO;QAAEN;MAAS;MACzD,MAAMF,IAAI,CAACc,MAAM,CAACF,aAAa,CAAC,CAACf,OAAM;MAEvCX,YAAY,CAACU,KAAK,CAACmB,SAAQ,GAAI,EAAC,EAAE;MAClC7B,YAAY,CAACU,KAAK,CAACoB,WAAW,CAACX,MAAM;IACvC;IAEA,MAAMY,WAAU,GAAKC,SAAS,IAAK;MACjC;MACA,IAAIhC,YAAY,CAACU,KAAK,EAAE;QACtB,MAAMuB,UAAS,GAAIlC,IAAI,CAACG,MAAM,CAACC,KAAK,CAACT,UAAU,CAACC,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,CAACsC,MAAK;QACtE,MAAMC,OAAM,GAAIH,SAAQ,GAAIC,UAAS;QACrCjC,YAAY,CAACU,KAAK,CAAC0B,SAAQ,GAAIpC,YAAY,CAACU,KAAK,CAAC2B,YAAW,GAAIF,OAAM;MACzE;IACF;IAEA,OAAO;MAAEnC,YAAY;MAAE+B;IAAY;EACrC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}