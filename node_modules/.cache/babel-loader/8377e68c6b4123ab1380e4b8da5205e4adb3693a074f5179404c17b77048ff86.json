{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, vShow as _vShow, normalizeStyle as _normalizeStyle, withDirectives as _withDirectives, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"result-container\"\n};\nconst _hoisted_2 = {\n  class: \"pdf-view\"\n};\nconst _hoisted_3 = {\n  class: \"latex-view\"\n};\nconst _hoisted_4 = [\"onMouseenter\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 左侧 PDF 显示 \"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.pdfPages, (page, pageIndex) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: pageIndex,\n      class: \"pdf-page\"\n    }, [_createElementVNode(\"canvas\", {\n      ref_for: true,\n      ref: 'pdfCanvas' + pageIndex,\n      class: \"pdf-canvas\"\n    }, null, 512 /* NEED_PATCH */), _createCommentVNode(\" 高亮区域 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(page.boxes, (box, idx) => {\n      return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n        key: idx,\n        class: \"highlight-box\",\n        style: _normalizeStyle({\n          top: box.top + 'px',\n          left: box.left + 'px',\n          width: box.width + 'px',\n          height: box.height + 'px'\n        })\n      }, null, 4 /* STYLE */)), [[_vShow, $data.hoveredLine === box.line]]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 右侧 LaTeX 显示 \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"pre\", null, [_cache[3] || (_cache[3] = _createTextVNode(\"        \")), _createElementVNode(\"code\", null, [_cache[1] || (_cache[1] = _createTextVNode(\"\\n          \")), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.latexLines, (line, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass({\n        'highlight-line': $data.hoveredLine === index\n      }),\n      onMouseenter: $event => $data.hoveredLine = index,\n      onMouseleave: _cache[0] || (_cache[0] = $event => $data.hoveredLine = null)\n    }, \"\\n            \" + _toDisplayString(line) + \"\\n          \", 43 /* TEXT, CLASS, PROPS, NEED_HYDRATION */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */)), _cache[2] || (_cache[2] = _createTextVNode(\"\\n        \"))]), _cache[4] || (_cache[4] = _createTextVNode(\"\\n      \"))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","pdfPages","page","pageIndex","key","ref","boxes","box","idx","style","_normalizeStyle","top","left","width","height","hoveredLine","line","_hoisted_3","latexLines","index","_normalizeClass","onMouseenter","$event","onMouseleave","_cache","_toDisplayString","_hoisted_4"],"sources":["D:\\OCR\\ocr\\src\\views\\Results.vue"],"sourcesContent":["<template>\r\n  <div class=\"result-container\">\r\n    <!-- 左侧 PDF 显示 -->\r\n    <div class=\"pdf-view\">\r\n      <div \r\n        v-for=\"(page, pageIndex) in pdfPages\" \r\n        :key=\"pageIndex\"\r\n        class=\"pdf-page\"\r\n      >\r\n        <canvas \r\n          :ref=\"'pdfCanvas' + pageIndex\" \r\n          class=\"pdf-canvas\"\r\n        ></canvas>\r\n\r\n        <!-- 高亮区域 -->\r\n        <div \r\n          v-for=\"(box, idx) in page.boxes\" \r\n          :key=\"idx\"\r\n          class=\"highlight-box\"\r\n          v-show=\"hoveredLine === box.line\"\r\n          :style=\"{\r\n            top: box.top + 'px',\r\n            left: box.left + 'px',\r\n            width: box.width + 'px',\r\n            height: box.height + 'px'\r\n          }\"\r\n        ></div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 右侧 LaTeX 显示 -->\r\n    <div class=\"latex-view\">\r\n      <pre>\r\n        <code>\r\n          <div\r\n            v-for=\"(line, index) in latexLines\"\r\n            :key=\"index\"\r\n            :class=\"{ 'highlight-line': hoveredLine === index }\"\r\n            @mouseenter=\"hoveredLine = index\"\r\n            @mouseleave=\"hoveredLine = null\"\r\n          >\r\n            {{ line }}\r\n          </div>\r\n        </code>\r\n      </pre>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as pdfjsLib from \"pdfjs-dist\";\r\n\r\npdfjsLib.GlobalWorkerOptions.workerSrc =\r\n  \"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.worker.min.js\";\r\n\r\nexport default {\r\n  name: \"Result\",\r\n  data() {\r\n    return {\r\n      pdfUrl: \"/output/result.pdf\", // 后端 OCR 输出 PDF 路径\r\n      pdfDoc: null,\r\n      pdfPages: [], // 每页 canvas + 对应 boxes\r\n      latexLines: [], // 模型输出的 LaTeX 按行切分\r\n      hoveredLine: null\r\n    };\r\n  },\r\n  methods: {\r\n    async loadPdf() {\r\n      this.pdfDoc = await pdfjsLib.getDocument(this.pdfUrl).promise;\r\n\r\n      for (let i = 1; i <= this.pdfDoc.numPages; i++) {\r\n        const page = await this.pdfDoc.getPage(i);\r\n        const viewport = page.getViewport({ scale: 1.5 });\r\n\r\n        // 创建 canvas 渲染\r\n        const canvas = this.$refs[\"pdfCanvas\" + (i - 1)][0];\r\n        const context = canvas.getContext(\"2d\");\r\n        canvas.height = viewport.height;\r\n        canvas.width = viewport.width;\r\n\r\n        const renderContext = {\r\n          canvasContext: context,\r\n          viewport: viewport\r\n        };\r\n        await page.render(renderContext).promise;\r\n\r\n        // TODO: 从后端返回的 OCR 结果里取出对应 box\r\n        this.pdfPages.push({\r\n          boxes: [\r\n            // 示例：模拟每行对应的 box（后端返回时要改成真实数据）\r\n            { line: 0, top: 50, left: 100, width: 200, height: 20 },\r\n            { line: 1, top: 100, left: 100, width: 250, height: 20 }\r\n          ]\r\n        });\r\n      }\r\n    },\r\n    async loadLatex() {\r\n      // 模拟后端返回的 LaTeX 文本\r\n      const resultLatex = `\r\n        \\\\documentclass{article}\r\n        \\\\begin{document}\r\n        Hello $x^2 + y^2 = z^2$\r\n        \\\\end{document}\r\n      `;\r\n      this.latexLines = resultLatex.trim().split(\"\\n\");\r\n    }\r\n  },\r\n  async mounted() {\r\n    await this.loadPdf();\r\n    await this.loadLatex();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.result-container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: 100vh;\r\n}\r\n\r\n.pdf-view {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  background: #f9f9f9;\r\n  position: relative;\r\n}\r\n\r\n.pdf-page {\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.pdf-canvas {\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0px 0px 5px #ccc;\r\n}\r\n\r\n.highlight-box {\r\n  position: absolute;\r\n  background: rgba(255, 255, 0, 0.3);\r\n  border: 1px solid orange;\r\n  pointer-events: none;\r\n}\r\n\r\n.latex-view {\r\n  flex: 1;\r\n  background: #1e1e1e;\r\n  color: #f8f8f2;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n  font-family: monospace;\r\n}\r\n\r\n.highlight-line {\r\n  background: rgba(255, 255, 0, 0.2);\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAkB;;EAEtBA,KAAK,EAAC;AAAU;;EA4BhBA,KAAK,EAAC;AAAY;;;uBA9BzBC,mBAAA,CA6CM,OA7CNC,UA6CM,GA5CJC,mBAAA,eAAkB,EAClBC,mBAAA,CAyBM,OAzBNC,UAyBM,I,kBAxBJJ,mBAAA,CAuBMK,SAAA,QAAAC,WAAA,CAtBwBC,KAAA,CAAAC,QAAQ,GAA5BC,IAAI,EAAEC,SAAS;yBADzBV,mBAAA,CAuBM;MArBHW,GAAG,EAAED,SAAS;MACfX,KAAK,EAAC;QAENI,mBAAA,CAGU;;MAFPS,GAAG,gBAAgBF,SAAS;MAC7BX,KAAK,EAAC;oCAGRG,mBAAA,UAAa,G,kBACbF,mBAAA,CAWOK,SAAA,QAAAC,WAAA,CAVgBG,IAAI,CAACI,KAAK,GAAvBC,GAAG,EAAEC,GAAG;4CADlBf,mBAAA,CAWO;QATJW,GAAG,EAAEI,GAAG;QACThB,KAAK,EAAC,eAAe;QAEpBiB,KAAK,EAAAC,eAAA;eAAsBH,GAAG,CAACI,GAAG;gBAA4BJ,GAAG,CAACK,IAAI;iBAA6BL,GAAG,CAACM,KAAK;kBAA8BN,GAAG,CAACO,MAAM;;0CAD7Id,KAAA,CAAAe,WAAW,KAAKR,GAAG,CAACS,IAAI,E;;oCAWtCrB,mBAAA,iBAAoB,EACpBC,mBAAA,CAcM,OAdNqB,UAcM,GAbJrB,mBAAA,CAYM,c,2CAZD,UACH,IAAAA,mBAAA,CAUO,e,2CAVD,cACJ,K,kBAAAH,mBAAA,CAQMK,SAAA,QAAAC,WAAA,CAPoBC,KAAA,CAAAkB,UAAU,GAA1BF,IAAI,EAAEG,KAAK;yBADrB1B,mBAAA,CAQM;MANHW,GAAG,EAAEe,KAAK;MACV3B,KAAK,EAAA4B,eAAA;QAAA,kBAAsBpB,KAAA,CAAAe,WAAW,KAAKI;MAAK;MAChDE,YAAU,EAAAC,MAAA,IAAEtB,KAAA,CAAAe,WAAW,GAAGI,KAAK;MAC/BI,YAAU,EAAAC,MAAA,QAAAA,MAAA,MAAAF,MAAA,IAAEtB,KAAA,CAAAe,WAAW;OACzB,gBACC,GAAAU,gBAAA,CAAGT,IAAI,IAAG,cACZ,+CAAAU,UAAA;6EAAM,YACR,G,8CAAO,UACT,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}