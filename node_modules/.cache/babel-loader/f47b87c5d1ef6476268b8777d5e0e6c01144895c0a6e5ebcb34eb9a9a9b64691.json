{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"results\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"upload-section\"\n};\nconst _hoisted_3 = {\n  class: \"upload-card\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"display-section\"\n};\nconst _hoisted_5 = {\n  class: \"split-view\"\n};\nconst _hoisted_6 = {\n  class: \"pdf-panel\"\n};\nconst _hoisted_7 = {\n  class: \"panel-header\"\n};\nconst _hoisted_8 = {\n  class: \"page-controls\"\n};\nconst _hoisted_9 = [\"disabled\"];\nconst _hoisted_10 = [\"disabled\"];\nconst _hoisted_11 = {\n  class: \"pdf-container\"\n};\nconst _hoisted_12 = [\"src\"];\nconst _hoisted_13 = {\n  class: \"latex-panel\"\n};\nconst _hoisted_14 = {\n  class: \"panel-header\"\n};\nconst _hoisted_15 = {\n  class: \"latex-controls\"\n};\nconst _hoisted_16 = {\n  class: \"latex-output\"\n};\nconst _hoisted_17 = [\"onMouseenter\"];\nconst _hoisted_18 = {\n  class: \"line-number\"\n};\nconst _hoisted_19 = {\n  class: \"line-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 上传区域 \"), !$setup.pdfUrl ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"pdf-upload\",\n    accept: \".pdf\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $setup.handleFileUpload && $setup.handleFileUpload(...args)),\n    class: \"file-input\"\n  }, null, 32 /* NEED_HYDRATION */), _cache[5] || (_cache[5] = _createStaticVNode(\"<label for=\\\"pdf-upload\\\" class=\\\"upload-label\\\" data-v-6f07a7ac><div class=\\\"upload-icon\\\" data-v-6f07a7ac><svg width=\\\"48\\\" height=\\\"48\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" data-v-6f07a7ac><path d=\\\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\\\" data-v-6f07a7ac></path><polyline points=\\\"17 8 12 3 7 8\\\" data-v-6f07a7ac></polyline><line x1=\\\"12\\\" y1=\\\"3\\\" x2=\\\"12\\\" y2=\\\"15\\\" data-v-6f07a7ac></line></svg></div><h3 data-v-6f07a7ac>上传PDF文件</h3><p data-v-6f07a7ac>支持所有标准的PDF文档格式</p></label>\", 1))])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" PDF和LaTeX显示区域 \"), $setup.pdfUrl ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" 左侧PDF预览 \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"PDF预览\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.prevPage && $setup.prevPage(...args)),\n    disabled: $setup.currentPage <= 1\n  }, \"上一页\", 8 /* PROPS */, _hoisted_9), _createElementVNode(\"span\", null, \"第 \" + _toDisplayString($setup.currentPage) + \" 页 / 共 \" + _toDisplayString($setup.totalPages) + \" 页\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.nextPage && $setup.nextPage(...args)),\n    disabled: $setup.currentPage >= $setup.totalPages\n  }, \"下一页\", 8 /* PROPS */, _hoisted_10)])]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"iframe\", {\n    src: `${$setup.pdfUrl}#page=${$setup.currentPage}`,\n    class: \"pdf-iframe\",\n    frameborder: \"0\"\n  }, null, 8 /* PROPS */, _hoisted_12)])]), _createCommentVNode(\" 右侧LaTeX输出 \"), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"Nougat LaTeX 输出\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.copyLaTeX && $setup.copyLaTeX(...args)),\n    class: \"copy-btn\"\n  }, \"复制全部\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $setup.downloadLaTeX && $setup.downloadLaTeX(...args)),\n    class: \"download-btn\"\n  }, \"下载\")])]), _createElementVNode(\"div\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.latexLines, (line, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"latex-line\",\n      onMouseenter: $event => $setup.handleLineHover(index)\n    }, [_createElementVNode(\"span\", _hoisted_18, _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_19, _toDisplayString(line), 1 /* TEXT */)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_17);\n  }), 128 /* KEYED_FRAGMENT */))])])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","$setup","pdfUrl","_hoisted_2","_createElementVNode","_hoisted_3","type","id","accept","onChange","_cache","args","handleFileUpload","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","onClick","prevPage","disabled","currentPage","_hoisted_9","_toDisplayString","totalPages","nextPage","_hoisted_10","_hoisted_11","src","frameborder","_hoisted_13","_hoisted_14","_hoisted_15","copyLaTeX","downloadLaTeX","_hoisted_16","_Fragment","_renderList","latexLines","line","index","key","onMouseenter","$event","handleLineHover","_hoisted_18","_hoisted_19"],"sources":["D:\\OCR\\ocr\\src\\views\\Results.vue"],"sourcesContent":["<template>\r\n  <div class=\"results\">\r\n    <!-- 上传区域 -->\r\n    <div v-if=\"!pdfUrl\" class=\"upload-section\">\r\n      <div class=\"upload-card\">\r\n        <input\r\n          type=\"file\"\r\n          id=\"pdf-upload\"\r\n          accept=\".pdf\"\r\n          @change=\"handleFileUpload\"\r\n          class=\"file-input\"\r\n        />\r\n        <label for=\"pdf-upload\" class=\"upload-label\">\r\n          <div class=\"upload-icon\">\r\n            <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n              <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n              <polyline points=\"17 8 12 3 7 8\"></polyline>\r\n              <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\"></line>\r\n            </svg>\r\n          </div>\r\n          <h3>上传PDF文件</h3>\r\n          <p>支持所有标准的PDF文档格式</p>\r\n        </label>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- PDF和LaTeX显示区域 -->\r\n    <div v-if=\"pdfUrl\" class=\"display-section\">\r\n      <div class=\"split-view\">\r\n        <!-- 左侧PDF预览 -->\r\n        <div class=\"pdf-panel\">\r\n          <div class=\"panel-header\">\r\n            <h3>PDF预览</h3>\r\n            <div class=\"page-controls\">\r\n              <button @click=\"prevPage\" :disabled=\"currentPage <= 1\">上一页</button>\r\n              <span>第 {{ currentPage }} 页 / 共 {{ totalPages }} 页</span>\r\n              <button @click=\"nextPage\" :disabled=\"currentPage >= totalPages\">下一页</button>\r\n            </div>\r\n          </div>\r\n          <div class=\"pdf-container\">\r\n            <iframe\r\n              :src=\"`${pdfUrl}#page=${currentPage}`\"\r\n              class=\"pdf-iframe\"\r\n              frameborder=\"0\"\r\n            ></iframe>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 右侧LaTeX输出 -->\r\n        <div class=\"latex-panel\">\r\n          <div class=\"panel-header\">\r\n            <h3>Nougat LaTeX 输出</h3>\r\n            <div class=\"latex-controls\">\r\n              <button @click=\"copyLaTeX\" class=\"copy-btn\">复制全部</button>\r\n              <button @click=\"downloadLaTeX\" class=\"download-btn\">下载</button>\r\n            </div>\r\n          </div>\r\n          <div class=\"latex-output\">\r\n            <div\r\n              v-for=\"(line, index) in latexLines\"\r\n              :key=\"index\"\r\n              class=\"latex-line\"\r\n              @mouseenter=\"handleLineHover(index)\"\r\n            >\r\n              <span class=\"line-number\">{{ index + 1 }}</span>\r\n              <span class=\"line-content\">{{ line }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"OcrResults\",\r\n  setup() {\r\n    const store = useStore();\r\n    const pdfUrl = computed(() => store.state.ocrResults?.pdfUrl);\r\n    const latexText = computed(() => store.state.ocrResults?.text || \"\");\r\n    const currentPage = ref(1);\r\n    const totalPages = ref(5);\r\n    const fileName = ref(\"\");\r\n\r\n    // LaTeX 按行拆分\r\n    const latexLines = computed(() => {\r\n      if (latexText.value) {\r\n        return latexText.value.split(\"\\n\").filter(line => line.trim() !== \"\");\r\n      }\r\n      // 如果没有从store获取到数据，使用默认示例数据\r\n      return [\r\n        '\\\\documentclass{article}',\r\n        '\\\\usepackage{amsmath}',\r\n        '\\\\usepackage{amssymb}',\r\n        '\\\\begin{document}',\r\n        '\\\\title{OCR智能平台技术文档}',\r\n        '\\\\author{OCR Team}',\r\n        '\\\\date{\\\\today}',\r\n        '\\\\maketitle',\r\n        '',\r\n        '# Nougat: Neural Optical Understanding for Academic Documents',\r\n        'Lukas Blecher',\r\n        'Guillem Cucurull',\r\n        'Thomas Scialom',\r\n        'Robert Stojnic',\r\n        'Meta AI',\r\n        '',\r\n        '###### Abstract',\r\n        'Scientific knowledge is predominantly stored in books and scientific journals, often in the form of PDFs.',\r\n        'However, the PDF format leads to a loss of semantic information, particularly for mathematical expressions.',\r\n        'We propose Nougat (**N**eural **O**ptical **U**ndertaking for **A**academic **D**e**cuments),',\r\n        'a Visual Transformer model that performs an _Optical Character Recognition_ (OCR) task',\r\n        'for processing scientific documents into a markup language,',\r\n        'and demonstrate the effectiveness of our model on a new dataset of scientific documents.',\r\n        'The proposed approach offers a promising solution to enhance the accessibility',\r\n        'of scientific knowledge in the digital age, by bridging the gap between',\r\n        'human-readable documents and machine-readable text.',\r\n        'We release the models and code to accelerate future work on scientific text recognition.'\r\n      ];\r\n    });\r\n\r\n    // 文件上传处理\r\n    const handleFileUpload = (event) => {\r\n      const file = event.target.files[0];\r\n      if (file && file.type === 'application/pdf') {\r\n        fileName.value = file.name;\r\n        const fileUrl = URL.createObjectURL(file);\r\n        \r\n        // 存储到Vuex\r\n        store.commit('setOcrResults', {\r\n          pdfUrl: fileUrl,\r\n          text: \"\", // 这里应该调用Nougat API获取实际文本\r\n          fileName: file.name\r\n        });\r\n\r\n        // 处理PDF并获取LaTeX输出\r\n        processPDFWithNougat();\r\n      }\r\n    };\r\n\r\n    // 处理PDF并获取LaTeX输出\r\n    const processPDFWithNougat = () => {\r\n      // 这里应该调用Nougat API处理PDF\r\n      // 暂时使用模拟数据\r\n      console.log(\"Processing PDF with Nougat...\");\r\n    };\r\n\r\n    // 鼠标悬停处理\r\n    const handleLineHover = (lineIndex) => {\r\n      scrollToCorrespondingPage(lineIndex);\r\n    };\r\n\r\n    // 滚动到对应页面\r\n    const scrollToCorrespondingPage = (lineIndex) => {\r\n      const targetPage = Math.floor(lineIndex / 10) + 1;\r\n      if (targetPage >= 1 && targetPage <= totalPages.value) {\r\n        currentPage.value = targetPage;\r\n      }\r\n    };\r\n\r\n    // 页面导航\r\n    const prevPage = () => {\r\n      if (currentPage.value > 1) currentPage.value--;\r\n    };\r\n\r\n    const nextPage = () => {\r\n      if (currentPage.value < totalPages.value) currentPage.value++;\r\n    };\r\n\r\n    // 复制LaTeX\r\n    const copyLaTeX = () => {\r\n      const text = latexLines.value.join('\\n');\r\n      navigator.clipboard.writeText(text).then(() => {\r\n        alert('LaTeX内容已复制到剪贴板');\r\n      });\r\n    };\r\n\r\n    // 下载LaTeX\r\n    const downloadLaTeX = () => {\r\n      const text = latexLines.value.join('\\n');\r\n      const blob = new Blob([text], { type: 'text/plain' });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = fileName.value ? `${fileName.value.replace('.pdf', '')}.tex` : 'output.tex';\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      URL.revokeObjectURL(url);\r\n    };\r\n\r\n    onMounted(() => {\r\n      if (!pdfUrl.value) {\r\n        console.log(\"等待用户上传PDF文件\");\r\n      }\r\n    });\r\n\r\n    return {\r\n      pdfUrl,\r\n      latexLines,\r\n      currentPage,\r\n      totalPages,\r\n      handleFileUpload,\r\n      handleLineHover,\r\n      prevPage,\r\n      nextPage,\r\n      copyLaTeX,\r\n      downloadLaTeX\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.results {\r\n  padding: 20px;\r\n  min-height: calc(100vh - 140px);\r\n}\r\n\r\n/* 上传区域 */\r\n.upload-section {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 400px;\r\n}\r\n\r\n.upload-card {\r\n  background: white;\r\n  border: 2px dashed #ddd;\r\n  border-radius: 12px;\r\n  padding: 3rem;\r\n  text-align: center;\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  max-width: 500px;\r\n}\r\n\r\n.upload-card:hover {\r\n  border-color: #667eea;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.file-input {\r\n  display: none;\r\n}\r\n\r\n.upload-label {\r\n  cursor: pointer;\r\n}\r\n\r\n.upload-icon {\r\n  color: #667eea;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.upload-label h3 {\r\n  margin-bottom: 0.5rem;\r\n  color: #2c3e50;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.upload-label p {\r\n  color: #7f8c8d;\r\n  font-size: 1rem;\r\n}\r\n\r\n/* 分割视图 */\r\n.display-section {\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 20px rgba(0,0,0,0.1);\r\n  overflow: hidden;\r\n}\r\n\r\n.split-view {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  height: 600px;\r\n}\r\n\r\n.pdf-panel, .latex-panel {\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-right: 1px solid #eee;\r\n}\r\n\r\n.latex-panel {\r\n  border-right: none;\r\n}\r\n\r\n.panel-header {\r\n  padding: 1rem 1.5rem;\r\n  background: #f8f9fa;\r\n  border-bottom: 1px solid #eee;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.panel-header h3 {\r\n  color: #2c3e50;\r\n  font-size: 1.1rem;\r\n  margin: 0;\r\n}\r\n\r\n.page-controls, .latex-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.page-controls button, .copy-btn, .download-btn {\r\n  padding: 0.5rem 1rem;\r\n  border: 1px solid #ddd;\r\n  background: white;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.page-controls button:hover:not(:disabled), \r\n.copy-btn:hover, \r\n.download-btn:hover {\r\n  background: #667eea;\r\n  color: white;\r\n  border-color: #667eea;\r\n}\r\n\r\n.page-controls button:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* PDF容器 */\r\n.pdf-container {\r\n  flex: 1;\r\n  overflow: auto;\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.pdf-iframe {\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 500px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n}\r\n\r\n/* LaTeX输出 */\r\n.latex-output {\r\n  flex: 1;\r\n  overflow: auto;\r\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\r\n  font-size: 13px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.latex-line {\r\n  padding: 4px 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  transition: all 0.2s ease;\r\n  cursor: pointer;\r\n}\r\n\r\n.latex-line:hover {\r\n  background: #f0f7ff;\r\n}\r\n\r\n.line-number {\r\n  min-width: 40px;\r\n  color: #7f8c8d;\r\n  font-size: 11px;\r\n  user-select: none;\r\n}\r\n\r\n.line-content {\r\n  flex: 1;\r\n  white-space: pre-wrap;\r\n  word-break: break-all;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .split-view {\r\n    grid-template-columns: 1fr;\r\n    height: auto;\r\n  }\r\n  \r\n  .pdf-panel, .latex-panel {\r\n    height: 400px;\r\n  }\r\n  \r\n  .upload-card {\r\n    padding: 2rem;\r\n    margin: 1rem;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}