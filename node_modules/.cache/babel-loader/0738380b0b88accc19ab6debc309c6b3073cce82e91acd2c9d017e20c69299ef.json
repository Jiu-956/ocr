{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"results\"\n};\nconst _hoisted_2 = {\n  class: \"results-container\"\n};\nconst _hoisted_3 = {\n  class: \"pdf-viewer\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  key: 1,\n  class: \"pdf-placeholder\"\n};\nconst _hoisted_6 = {\n  class: \"latex-viewer\"\n};\nconst _hoisted_7 = {\n  class: \"latex-header\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"page-controls\"\n};\nconst _hoisted_9 = {\n  class: \"latex-lines\"\n};\nconst _hoisted_10 = [\"onMouseenter\"];\nconst _hoisted_11 = {\n  class: \"line-number\"\n};\nconst _hoisted_12 = {\n  class: \"line-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"OCR Results\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 左边 PDF 渲染 \"), _createElementVNode(\"div\", _hoisted_3, [$setup.pdfUrl ? (_openBlock(), _createElementBlock(\"iframe\", {\n    key: 0,\n    src: `${$setup.pdfUrl}#page=${$setup.currentPage}`,\n    class: \"pdf-iframe\",\n    frameborder: \"0\",\n    onLoad: _cache[0] || (_cache[0] = (...args) => $setup.onPdfLoad && $setup.onPdfLoad(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_4)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _cache[2] || (_cache[2] = [_createElementVNode(\"p\", null, \"请上传PDF文件\", -1 /* CACHED */)])))]), _createCommentVNode(\" 右边 Nougat LaTeX 输出 \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"Nougat LaTeX 输出\", -1 /* CACHED */)), $setup.totalPages > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"span\", null, \"第 \" + _toDisplayString($setup.currentPage) + \" 页 / 共 \" + _toDisplayString($setup.totalPages) + \" 页\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.latexLines, (line, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"latex-line\", {\n        'highlighted': $setup.hoveredLine === index\n      }]),\n      onMouseenter: $event => $setup.handleLineHover(index),\n      onMouseleave: _cache[1] || (_cache[1] = (...args) => $setup.handleLineLeave && $setup.handleLineLeave(...args))\n    }, [_createElementVNode(\"span\", _hoisted_11, _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_12, _toDisplayString(line), 1 /* TEXT */)], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_10);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","$setup","pdfUrl","src","currentPage","frameborder","onLoad","_cache","args","onPdfLoad","_hoisted_5","_hoisted_6","_hoisted_7","totalPages","_hoisted_8","_toDisplayString","_hoisted_9","_Fragment","_renderList","latexLines","line","index","key","_normalizeClass","hoveredLine","onMouseenter","$event","handleLineHover","onMouseleave","handleLineLeave","_hoisted_11","_hoisted_12"],"sources":["D:\\OCR\\ocr\\src\\views\\Results.vue"],"sourcesContent":["<template>\r\n  <div class=\"results\">\r\n    <h2>OCR Results</h2>\r\n\r\n    <div class=\"results-container\">\r\n      <!-- 左边 PDF 渲染 -->\r\n      <div class=\"pdf-viewer\">\r\n        <iframe\r\n          v-if=\"pdfUrl\"\r\n          :src=\"`${pdfUrl}#page=${currentPage}`\"\r\n          class=\"pdf-iframe\"\r\n          frameborder=\"0\"\r\n          @load=\"onPdfLoad\"\r\n        ></iframe>\r\n        <div v-else class=\"pdf-placeholder\">\r\n          <p>请上传PDF文件</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 右边 Nougat LaTeX 输出 -->\r\n      <div class=\"latex-viewer\">\r\n        <div class=\"latex-header\">\r\n          <h3>Nougat LaTeX 输出</h3>\r\n          <div class=\"page-controls\" v-if=\"totalPages > 0\">\r\n            <span>第 {{ currentPage }} 页 / 共 {{ totalPages }} 页</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"latex-lines\">\r\n          <div\r\n            v-for=\"(line, index) in latexLines\"\r\n            :key=\"index\"\r\n            class=\"latex-line\"\r\n            :class=\"{ 'highlighted': hoveredLine === index }\"\r\n            @mouseenter=\"handleLineHover(index)\"\r\n            @mouseleave=\"handleLineLeave\"\r\n          >\r\n            <span class=\"line-number\">{{ index + 1 }}</span>\r\n            <span class=\"line-content\">{{ line }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"OcrResults\",\r\n  setup() {\r\n    const store = useStore();\r\n    const pdfUrl = computed(() => store.state.ocrResults?.pdfUrl);\r\n    const latexText = computed(() => store.state.ocrResults?.text || \"\");\r\n    const currentPage = ref(1);\r\n    const totalPages = ref(0);\r\n    const hoveredLine = ref(null);\r\n\r\n    // LaTeX 按行拆分\r\n    const latexLines = computed(() => {\r\n      return latexText.value.split(\"\\n\").filter(line => line.trim() !== \"\");\r\n    });\r\n\r\n    // 鼠标悬停处理\r\n    const handleLineHover = (lineIndex) => {\r\n      hoveredLine.value = lineIndex;\r\n      scrollToCorrespondingPage(lineIndex);\r\n    };\r\n\r\n    const handleLineLeave = () => {\r\n      hoveredLine.value = null;\r\n    };\r\n\r\n    // 滚动到对应页面\r\n    const scrollToCorrespondingPage = (lineIndex) => {\r\n      // 简单的页面映射逻辑：每10行对应一页\r\n      const targetPage = Math.floor(lineIndex / 10) + 1;\r\n      if (targetPage >= 1 && targetPage <= totalPages.value) {\r\n        currentPage.value = targetPage;\r\n      }\r\n    };\r\n\r\n    // PDF加载完成回调\r\n    const onPdfLoad = () => {\r\n      // 这里可以获取PDF的总页数\r\n      // 注意：iframe方式无法直接获取总页数，需要后端API支持或使用其他方法\r\n      totalPages.value = 5; // 默认值，实际应从API获取\r\n    };\r\n\r\n    onMounted(() => {\r\n      if (!pdfUrl.value) {\r\n        console.error(\"pdfUrl无效\");\r\n      }\r\n    });\r\n\r\n    return {\r\n      pdfUrl,\r\n      latexLines,\r\n      currentPage,\r\n      totalPages,\r\n      hoveredLine,\r\n      handleLineHover,\r\n      handleLineLeave,\r\n      onPdfLoad\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.results {\r\n  padding: 20px;\r\n}\r\n\r\n.results-container {\r\n  display: flex;\r\n  gap: 20px;\r\n  height: calc(100vh - 120px);\r\n}\r\n\r\n.pdf-viewer {\r\n  flex: 1;\r\n  border: 1px solid #ddd;\r\n  background: #f9f9f9;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n.pdf-iframe {\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 500px;\r\n}\r\n\r\n.pdf-placeholder {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #666;\r\n}\r\n\r\n.latex-viewer {\r\n  flex: 1;\r\n  border: 1px solid #ddd;\r\n  background: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.latex-header {\r\n  padding: 12px;\r\n  border-bottom: 1px solid #eee;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.latex-header h3 {\r\n  margin: 0;\r\n  font-size: 16px;\r\n}\r\n\r\n.page-controls {\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n.latex-lines {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\r\n  font-size: 13px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.latex-line {\r\n  padding: 4px 12px;\r\n  display: flex;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n  border-left: 3px solid transparent;\r\n}\r\n\r\n.latex-line:hover {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.latex-line.highlighted {\r\n  background-color: #e3f2fd;\r\n  border-left-color: #2196f3;\r\n}\r\n\r\n.line-number {\r\n  min-width: 40px;\r\n  color: #7f8c8d;\r\n  font-size: 11px;\r\n  user-select: none;\r\n}\r\n\r\n.line-content {\r\n  flex: 1;\r\n  white-space: pre-wrap;\r\n  word-break: break-all;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .results-container {\r\n    flex-direction: column;\r\n    height: auto;\r\n  }\r\n  \r\n  .pdf-viewer, .latex-viewer {\r\n    height: 400px;\r\n  }\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAS;;EAGbA,KAAK,EAAC;AAAmB;;EAEvBA,KAAK,EAAC;AAAY;;;;EAQTA,KAAK,EAAC;;;EAMfA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAc;;;EAElBA,KAAK,EAAC;;;EAIRA,KAAK,EAAC;AAAa;;;EASdA,KAAK,EAAC;AAAa;;EACnBA,KAAK,EAAC;AAAc;;uBApCpCC,mBAAA,CAyCM,OAzCNC,UAyCM,G,0BAxCJC,mBAAA,CAAoB,YAAhB,aAAW,qBAEfA,mBAAA,CAqCM,OArCNC,UAqCM,GApCJC,mBAAA,eAAkB,EAClBF,mBAAA,CAWM,OAXNG,UAWM,GATIC,MAAA,CAAAC,MAAM,I,cADdP,mBAAA,CAMU;;IAJPQ,GAAG,KAAKF,MAAA,CAAAC,MAAM,SAASD,MAAA,CAAAG,WAAW;IACnCV,KAAK,EAAC,YAAY;IAClBW,WAAW,EAAC,GAAG;IACdC,MAAI,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAAQ,SAAA,IAAAR,MAAA,CAAAQ,SAAA,IAAAD,IAAA,CAAS;yEAElBb,mBAAA,CAEM,OAFNe,UAEM,EAAAH,MAAA,QAAAA,MAAA,OADJV,mBAAA,CAAe,WAAZ,UAAQ,mB,OAIfE,mBAAA,wBAA2B,EAC3BF,mBAAA,CAoBM,OApBNc,UAoBM,GAnBJd,mBAAA,CAKM,OALNe,UAKM,G,0BAJJf,mBAAA,CAAwB,YAApB,iBAAe,qBACcI,MAAA,CAAAY,UAAU,Q,cAA3ClB,mBAAA,CAEM,OAFNmB,UAEM,GADJjB,mBAAA,CAAyD,cAAnD,IAAE,GAAAkB,gBAAA,CAAGd,MAAA,CAAAG,WAAW,IAAG,SAAO,GAAAW,gBAAA,CAAGd,MAAA,CAAAY,UAAU,IAAG,IAAE,gB,0CAGtDhB,mBAAA,CAYM,OAZNmB,UAYM,I,kBAXJrB,mBAAA,CAUMsB,SAAA,QAAAC,WAAA,CAToBjB,MAAA,CAAAkB,UAAU,GAA1BC,IAAI,EAAEC,KAAK;yBADrB1B,mBAAA,CAUM;MARH2B,GAAG,EAAED,KAAK;MACX3B,KAAK,EAAA6B,eAAA,EAAC,YAAY;QAAA,eACOtB,MAAA,CAAAuB,WAAW,KAAKH;MAAK;MAC7CI,YAAU,EAAAC,MAAA,IAAEzB,MAAA,CAAA0B,eAAe,CAACN,KAAK;MACjCO,YAAU,EAAArB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAA4B,eAAA,IAAA5B,MAAA,CAAA4B,eAAA,IAAArB,IAAA,CAAe;QAE5BX,mBAAA,CAAgD,QAAhDiC,WAAgD,EAAAf,gBAAA,CAAnBM,KAAK,sBAClCxB,mBAAA,CAA4C,QAA5CkC,WAA4C,EAAAhB,gBAAA,CAAdK,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}