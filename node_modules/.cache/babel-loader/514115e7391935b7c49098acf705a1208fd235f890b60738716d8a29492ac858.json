{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"pdf-splitter-page\"\n};\nconst _hoisted_2 = {\n  class: \"splitter-container\"\n};\nconst _hoisted_3 = {\n  class: \"splitter-card\"\n};\nconst _hoisted_4 = {\n  class: \"upload-section\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"pdf-info\"\n};\nconst _hoisted_6 = {\n  class: \"file-details\"\n};\nconst _hoisted_7 = {\n  class: \"file-name\"\n};\nconst _hoisted_8 = {\n  class: \"file-size\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"page-select-section\"\n};\nconst _hoisted_10 = {\n  class: \"input-group\"\n};\nconst _hoisted_11 = {\n  class: \"action-buttons\"\n};\nconst _hoisted_12 = [\"disabled\"];\nconst _hoisted_13 = {\n  key: 0\n};\nconst _hoisted_14 = {\n  key: 1\n};\nconst _hoisted_15 = {\n  key: 1,\n  class: \"error-msg\"\n};\nconst _hoisted_16 = {\n  key: 2,\n  class: \"success-msg\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"📄 PDF切割工具\", -1 /* CACHED */)), _cache[10] || (_cache[10] = _createElementVNode(\"p\", null, \"上传PDF文件，选择需要保留的页面，导出为新PDF。\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"📤 上传PDF文件\", -1 /* CACHED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    accept: \"application/pdf\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.onFileChange && $options.onFileChange(...args)),\n    class: \"file-input\"\n  }, null, 32 /* NEED_HYDRATION */), $data.pdfName ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[4] || (_cache[4] = _createElementVNode(\"span\", {\n    class: \"file-icon\"\n  }, \"📄\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", _hoisted_7, _toDisplayString($data.pdfName), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_8, _toDisplayString($data.fileSize), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)]), $data.pdfFile ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"✂️ 选择页面范围\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_10, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", null, \"输入页面范围（用逗号分隔，如：1,3,5-7）：\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.pageInput = $event),\n    placeholder: \"例如：1,2,4-6\",\n    class: \"page-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.pageInput]])]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.processPdf && $options.processPdf(...args)),\n    disabled: $data.processing,\n    class: \"process-btn\"\n  }, [$data.processing ? (_openBlock(), _createElementBlock(\"span\", _hoisted_13, \"⏳ 处理中...\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_14, \"🔄 开始切割\"))], 8 /* PROPS */, _hoisted_12), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.reset && $options.reset(...args)),\n    class: \"reset-btn\"\n  }, \"🔄 重置\")])])) : _createCommentVNode(\"v-if\", true), $data.errorMsg ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, \" ❌ \" + _toDisplayString($data.errorMsg), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.successMsg ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, \" ✅ \" + _toDisplayString($data.successMsg), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n    class: \"info-section\"\n  }, [_createElementVNode(\"h3\", null, \"💡 使用说明\"), _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, \"支持标准PDF文件格式\"), _createElementVNode(\"li\", null, \"页面范围格式：1,3,5-7（表示第1页、第3页、第5到7页）\"), _createElementVNode(\"li\", null, \"处理完成后将自动下载新的PDF文件\"), _createElementVNode(\"li\", null, \"目前为演示版本，实际切割功能需要后端支持\")])], -1 /* CACHED */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","type","accept","onChange","_cache","args","$options","onFileChange","$data","pdfName","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","_hoisted_8","fileSize","pdfFile","_hoisted_9","_hoisted_10","pageInput","$event","placeholder","_hoisted_11","onClick","processPdf","disabled","processing","_hoisted_13","_hoisted_14","reset","errorMsg","_hoisted_15","successMsg","_hoisted_16"],"sources":["D:\\OCR\\ocr\\src\\views\\PdfSplitter.vue"],"sourcesContent":["<template>\r\n  <div class=\"pdf-splitter-page\">\r\n    <div class=\"splitter-container\">\r\n      <h2>📄 PDF切割工具</h2>\r\n      <p>上传PDF文件，选择需要保留的页面，导出为新PDF。</p>\r\n      \r\n      <div class=\"splitter-card\">\r\n        <div class=\"upload-section\">\r\n          <h3>📤 上传PDF文件</h3>\r\n          <input \r\n            type=\"file\" \r\n            accept=\"application/pdf\" \r\n            @change=\"onFileChange\"\r\n            class=\"file-input\"\r\n          />\r\n          <div v-if=\"pdfName\" class=\"pdf-info\">\r\n            <span class=\"file-icon\">📄</span>\r\n            <div class=\"file-details\">\r\n              <span class=\"file-name\">{{ pdfName }}</span>\r\n              <span class=\"file-size\">{{ fileSize }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"pdfFile\" class=\"page-select-section\">\r\n          <h3>✂️ 选择页面范围</h3>\r\n          <div class=\"input-group\">\r\n            <label>输入页面范围（用逗号分隔，如：1,3,5-7）：</label>\r\n            <input \r\n              v-model=\"pageInput\" \r\n              placeholder=\"例如：1,2,4-6\"\r\n              class=\"page-input\"\r\n            />\r\n          </div>\r\n          <div class=\"action-buttons\">\r\n            <button @click=\"processPdf\" :disabled=\"processing\" class=\"process-btn\">\r\n              <span v-if=\"processing\">⏳ 处理中...</span>\r\n              <span v-else>🔄 开始切割</span>\r\n            </button>\r\n            <button @click=\"reset\" class=\"reset-btn\">🔄 重置</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"errorMsg\" class=\"error-msg\">\r\n          ❌ {{ errorMsg }}\r\n        </div>\r\n\r\n        <div v-if=\"successMsg\" class=\"success-msg\">\r\n          ✅ {{ successMsg }}\r\n        </div>\r\n\r\n        <div class=\"info-section\">\r\n          <h3>💡 使用说明</h3>\r\n          <ul>\r\n            <li>支持标准PDF文件格式</li>\r\n            <li>页面范围格式：1,3,5-7（表示第1页、第3页、第5到7页）</li>\r\n            <li>处理完成后将自动下载新的PDF文件</li>\r\n            <li>目前为演示版本，实际切割功能需要后端支持</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'PdfSplitter',\r\n  data() {\r\n    return {\r\n      pdfFile: null,\r\n      pdfName: '',\r\n      fileSize: '',\r\n      pageInput: '',\r\n      processing: false,\r\n      errorMsg: '',\r\n      successMsg: ''\r\n    }\r\n  },\r\n  methods: {\r\n    onFileChange(e) {\r\n      this.clearMessages();\r\n      const file = e.target.files[0];\r\n      if (!file) return;\r\n      \r\n      if (file.type !== 'application/pdf') {\r\n        this.errorMsg = '请选择PDF文件';\r\n        return;\r\n      }\r\n      \r\n      this.pdfFile = file;\r\n      this.pdfName = file.name;\r\n      this.fileSize = this.formatFileSize(file.size);\r\n    },\r\n    \r\n    formatFileSize(bytes) {\r\n      if (bytes === 0) return '0 Bytes';\r\n      const k = 1024;\r\n      const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    },\r\n    \r\n    async processPdf() {\r\n      this.clearMessages();\r\n      \r\n      if (!this.pdfFile) {\r\n        this.errorMsg = '请先上传PDF文件';\r\n        return;\r\n      }\r\n      \r\n      if (!this.pageInput.trim()) {\r\n        this.errorMsg = '请输入页面范围';\r\n        return;\r\n      }\r\n      \r\n      this.processing = true;\r\n      \r\n      // 模拟处理过程\r\n      setTimeout(() => {\r\n        this.processing = false;\r\n        this.successMsg = 'PDF切割请求已提交！实际功能需要后端支持，这里仅为演示界面。';\r\n        \r\n        // 模拟文件下载\r\n        setTimeout(() => {\r\n          this.downloadDemo();\r\n        }, 1000);\r\n      }, 2000);\r\n    },\r\n    \r\n    downloadDemo() {\r\n      // 创建一个模拟的下载链接\r\n      const link = document.createElement('a');\r\n      link.href = '#';\r\n      link.download = `split_${this.pdfName}`;\r\n      link.click();\r\n      \r\n      this.successMsg += ' 实际项目中，这里会下载处理后的PDF文件。';\r\n    },\r\n    \r\n    reset() {\r\n      this.pdfFile = null;\r\n      this.pdfName = '';\r\n      this.fileSize = '';\r\n      this.pageInput = '';\r\n      this.clearMessages();\r\n      \r\n      // 清除文件输入\r\n      const fileInput = document.querySelector('.file-input');\r\n      if (fileInput) {\r\n        fileInput.value = '';\r\n      }\r\n    },\r\n    \r\n    clearMessages() {\r\n      this.errorMsg = '';\r\n      this.successMsg = '';\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.pdf-splitter-page {\r\n  background: white;\r\n  min-height: 70vh;\r\n  padding: 2rem 0;\r\n}\r\n\r\n.splitter-container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 0 2rem;\r\n}\r\n\r\n.splitter-container h2 {\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  font-size: 2.2rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.splitter-container > p {\r\n  text-align: center;\r\n  color: #7f8c8d;\r\n  font-size: 1.1rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.splitter-card {\r\n  background: #f8f9fa;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.08);\r\n  padding: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n}\r\n\r\n.upload-section, .page-select-section, .info-section {\r\n  background: white;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.05);\r\n}\r\n\r\n.upload-section h3, .page-select-section h3, .info-section h3 {\r\n  color: #2c3e50;\r\n  margin-bottom: 1rem;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n.file-input {\r\n  width: 100%;\r\n  padding: 0.8rem;\r\n  border: 2px dashed #d1d5db;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  background: #fafbfc;\r\n}\r\n\r\n.file-input:hover {\r\n  border-color: #667eea;\r\n  background: #f0f4ff;\r\n}\r\n\r\n.pdf-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  margin-top: 1rem;\r\n  padding: 1rem;\r\n  background: #e8f5e8;\r\n  border-radius: 8px;\r\n}\r\n\r\n.file-icon {\r\n  font-size: 2rem;\r\n}\r\n\r\n.file-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.3rem;\r\n}\r\n\r\n.file-name {\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n}\r\n\r\n.file-size {\r\n  font-size: 0.9rem;\r\n  color: #7f8c8d;\r\n}\r\n\r\n.input-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.input-group label {\r\n  color: #2c3e50;\r\n  font-weight: 500;\r\n}\r\n\r\n.page-input {\r\n  padding: 0.8rem;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 6px;\r\n  font-size: 1rem;\r\n  transition: border-color 0.3s ease;\r\n}\r\n\r\n.page-input:focus {\r\n  outline: none;\r\n  border-color: #667eea;\r\n  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.process-btn, .reset-btn {\r\n  padding: 0.8rem 1.5rem;\r\n  border: none;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.process-btn {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n  flex: 1;\r\n}\r\n\r\n.process-btn:hover:not(:disabled) {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\r\n}\r\n\r\n.process-btn:disabled {\r\n  background: #bdc3c7;\r\n  cursor: not-allowed;\r\n  transform: none;\r\n}\r\n\r\n.reset-btn {\r\n  background: #95a5a6;\r\n  color: white;\r\n}\r\n\r\n.reset-btn:hover {\r\n  background: #7f8c8d;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.error-msg {\r\n  background: #fee2e2;\r\n  color: #991b1b;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  border: 1px solid #fecaca;\r\n}\r\n\r\n.success-msg {\r\n  background: #d1fae5;\r\n  color: #065f46;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  border: 1px solid #a7f3d0;\r\n}\r\n\r\n.info-section ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.info-section li {\r\n  padding: 0.5rem 0;\r\n  color: #2c3e50;\r\n  border-bottom: 1px solid #ecf0f1;\r\n}\r\n\r\n.info-section li:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.info-section li:before {\r\n  content: \"💡 \";\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .splitter-container {\r\n    padding: 0 1rem;\r\n  }\r\n  \r\n  .splitter-card {\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .action-buttons {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .splitter-container h2 {\r\n    font-size: 1.8rem;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}