{"ast":null,"code":"import { ref, computed, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nimport * as pdfjsLib from \"pdfjs-dist\";\n\n// 设置 PDF.js worker\npdfjsLib.GlobalWorkerOptions.workerSrc = \"https://cdn.jsdelivr.net/npm/pdfjs-dist@3.4.120/build/pdf.worker.min.js\";\nexport default {\n  name: \"OcrResults\",\n  setup() {\n    const store = useStore();\n    const pdfContainer = ref(null);\n    const pdfDoc = ref(null);\n    const loading = ref(true);\n    const error = ref(null);\n\n    // 检查是否有 OCR 结果\n    const hasOcrResults = computed(() => {\n      return store.state.ocrResults && store.state.ocrResults.pdfUrl && store.state.ocrResults.text;\n    });\n\n    // LaTeX 按行拆分\n    const latexLines = computed(() => {\n      return store.state.ocrResults?.text ? store.state.ocrResults.text.split(\"\\n\") : [];\n    });\n\n    // 渲染 PDF 页\n    const renderPage = async pageNum => {\n      try {\n        const page = await pdfDoc.value.getPage(pageNum);\n        const viewport = page.getViewport({\n          scale: 1.5\n        });\n        const canvas = document.createElement(\"canvas\");\n        const context = canvas.getContext(\"2d\");\n        canvas.width = viewport.width;\n        canvas.height = viewport.height;\n        canvas.className = \"pdf-page\";\n        const renderContext = {\n          canvasContext: context,\n          viewport: viewport\n        };\n        await page.render(renderContext).promise;\n        return canvas;\n      } catch (err) {\n        console.error(\"Error rendering page:\", err);\n        throw err;\n      }\n    };\n\n    // 渲染所有页面\n    const renderAllPages = async () => {\n      if (!pdfDoc.value || !pdfContainer.value) return;\n      try {\n        pdfContainer.value.innerHTML = \"\";\n        for (let i = 1; i <= pdfDoc.value.numPages; i++) {\n          const canvas = await renderPage(i);\n          pdfContainer.value.appendChild(canvas);\n\n          // 添加页面分隔\n          if (i < pdfDoc.value.numPages) {\n            const divider = document.createElement(\"div\");\n            divider.style.height = \"20px\";\n            divider.style.backgroundColor = \"#f0f0f0\";\n            pdfContainer.value.appendChild(divider);\n          }\n        }\n      } catch (err) {\n        error.value = \"Failed to render PDF pages\";\n        console.error(\"Render error:\", err);\n      }\n    };\n\n    // 鼠标悬停滚动 PDF\n    const scrollPdfTo = lineIndex => {\n      if (pdfContainer.value && latexLines.value.length > 0) {\n        const totalLines = latexLines.value.length;\n        const percent = lineIndex / totalLines;\n        pdfContainer.value.parentElement.scrollTop = pdfContainer.value.parentElement.scrollHeight * percent;\n      }\n    };\n\n    // 加载 PDF\n    onMounted(async () => {\n      // 如果没有 OCR 结果，直接显示提示\n      if (!hasOcrResults.value) {\n        loading.value = false;\n        return;\n      }\n      const pdfUrl = store.state.ocrResults.pdfUrl;\n      try {\n        loading.value = true;\n\n        // 处理可能的相对路径\n        const effectiveUrl = pdfUrl.startsWith('http') ? pdfUrl : `${window.location.origin}${pdfUrl.startsWith('/') ? '' : '/'}${pdfUrl}`;\n        console.log(\"Loading PDF from:\", effectiveUrl);\n        const loadingTask = pdfjsLib.getDocument(effectiveUrl);\n        pdfDoc.value = await loadingTask.promise;\n        await renderAllPages();\n        loading.value = false;\n      } catch (err) {\n        console.error(\"PDF loading failed:\", err);\n        error.value = `Failed to load PDF: ${err.message}`;\n        loading.value = false;\n      }\n    });\n    return {\n      pdfContainer,\n      latexLines,\n      scrollPdfTo,\n      loading,\n      error,\n      hasOcrResults\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","pdfjsLib","GlobalWorkerOptions","workerSrc","name","setup","store","pdfContainer","pdfDoc","loading","error","hasOcrResults","state","ocrResults","pdfUrl","text","latexLines","split","renderPage","pageNum","page","value","getPage","viewport","getViewport","scale","canvas","document","createElement","context","getContext","width","height","className","renderContext","canvasContext","render","promise","err","console","renderAllPages","innerHTML","i","numPages","appendChild","divider","style","backgroundColor","scrollPdfTo","lineIndex","length","totalLines","percent","parentElement","scrollTop","scrollHeight","effectiveUrl","startsWith","window","location","origin","log","loadingTask","getDocument","message"],"sources":["D:\\OCR\\ocr\\src\\views\\Results.vue"],"sourcesContent":["<template>\r\n  <div class=\"results\">\r\n    <h2>OCR Results</h2>\r\n\r\n    <div v-if=\"loading\" class=\"loading\">Loading PDF...</div>\r\n    <div v-else-if=\"error\" class=\"error\">{{ error }}</div>\r\n    <div v-else-if=\"!hasOcrResults\" class=\"no-results\">\r\n      <p>No PDF URL found</p>\r\n      <p>Please upload a PDF file first to see OCR results</p>\r\n    </div>\r\n    \r\n    <div v-else class=\"results-container\">\r\n      <!-- 左边 PDF 渲染 -->\r\n      <div class=\"pdf-viewer\">\r\n        <div ref=\"pdfContainer\" class=\"pdf-pages\"></div>\r\n      </div>\r\n\r\n      <!-- 右边 Nougat LaTeX 输出 -->\r\n      <div class=\"latex-viewer\">\r\n        <h3>Nougat LaTeX 输出：</h3>\r\n        <div class=\"latex-lines\">\r\n          <div\r\n            v-for=\"(line, index) in latexLines\"\r\n            :key=\"index\"\r\n            class=\"latex-line\"\r\n            @mouseover=\"scrollPdfTo(index)\"\r\n          >\r\n            {{ line }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport * as pdfjsLib from \"pdfjs-dist\";\r\n\r\n// 设置 PDF.js worker\r\npdfjsLib.GlobalWorkerOptions.workerSrc = \r\n  \"https://cdn.jsdelivr.net/npm/pdfjs-dist@3.4.120/build/pdf.worker.min.js\";\r\n\r\nexport default {\r\n  name: \"OcrResults\",\r\n  setup() {\r\n    const store = useStore();\r\n    const pdfContainer = ref(null);\r\n    const pdfDoc = ref(null);\r\n    const loading = ref(true);\r\n    const error = ref(null);\r\n\r\n    // 检查是否有 OCR 结果\r\n    const hasOcrResults = computed(() => {\r\n      return store.state.ocrResults && \r\n             store.state.ocrResults.pdfUrl && \r\n             store.state.ocrResults.text;\r\n    });\r\n\r\n    // LaTeX 按行拆分\r\n    const latexLines = computed(() => {\r\n      return store.state.ocrResults?.text\r\n        ? store.state.ocrResults.text.split(\"\\n\")\r\n        : [];\r\n    });\r\n\r\n    // 渲染 PDF 页\r\n    const renderPage = async (pageNum) => {\r\n      try {\r\n        const page = await pdfDoc.value.getPage(pageNum);\r\n        const viewport = page.getViewport({ scale: 1.5 });\r\n        \r\n        const canvas = document.createElement(\"canvas\");\r\n        const context = canvas.getContext(\"2d\");\r\n        canvas.width = viewport.width;\r\n        canvas.height = viewport.height;\r\n        canvas.className = \"pdf-page\";\r\n\r\n        const renderContext = {\r\n          canvasContext: context,\r\n          viewport: viewport\r\n        };\r\n\r\n        await page.render(renderContext).promise;\r\n        return canvas;\r\n      } catch (err) {\r\n        console.error(\"Error rendering page:\", err);\r\n        throw err;\r\n      }\r\n    };\r\n\r\n    // 渲染所有页面\r\n    const renderAllPages = async () => {\r\n      if (!pdfDoc.value || !pdfContainer.value) return;\r\n      \r\n      try {\r\n        pdfContainer.value.innerHTML = \"\";\r\n        \r\n        for (let i = 1; i <= pdfDoc.value.numPages; i++) {\r\n          const canvas = await renderPage(i);\r\n          pdfContainer.value.appendChild(canvas);\r\n          \r\n          // 添加页面分隔\r\n          if (i < pdfDoc.value.numPages) {\r\n            const divider = document.createElement(\"div\");\r\n            divider.style.height = \"20px\";\r\n            divider.style.backgroundColor = \"#f0f0f0\";\r\n            pdfContainer.value.appendChild(divider);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        error.value = \"Failed to render PDF pages\";\r\n        console.error(\"Render error:\", err);\r\n      }\r\n    };\r\n\r\n    // 鼠标悬停滚动 PDF\r\n    const scrollPdfTo = (lineIndex) => {\r\n      if (pdfContainer.value && latexLines.value.length > 0) {\r\n        const totalLines = latexLines.value.length;\r\n        const percent = lineIndex / totalLines;\r\n        pdfContainer.value.parentElement.scrollTop =\r\n          pdfContainer.value.parentElement.scrollHeight * percent;\r\n      }\r\n    };\r\n\r\n    // 加载 PDF\r\n    onMounted(async () => {\r\n      // 如果没有 OCR 结果，直接显示提示\r\n      if (!hasOcrResults.value) {\r\n        loading.value = false;\r\n        return;\r\n      }\r\n\r\n      const pdfUrl = store.state.ocrResults.pdfUrl;\r\n      \r\n      try {\r\n        loading.value = true;\r\n        \r\n        // 处理可能的相对路径\r\n        const effectiveUrl = pdfUrl.startsWith('http') \r\n          ? pdfUrl \r\n          : `${window.location.origin}${pdfUrl.startsWith('/') ? '' : '/'}${pdfUrl}`;\r\n        \r\n        console.log(\"Loading PDF from:\", effectiveUrl);\r\n        \r\n        const loadingTask = pdfjsLib.getDocument(effectiveUrl);\r\n        pdfDoc.value = await loadingTask.promise;\r\n        \r\n        await renderAllPages();\r\n        loading.value = false;\r\n        \r\n      } catch (err) {\r\n        console.error(\"PDF loading failed:\", err);\r\n        error.value = `Failed to load PDF: ${err.message}`;\r\n        loading.value = false;\r\n      }\r\n    });\r\n\r\n    return {\r\n      pdfContainer,\r\n      latexLines,\r\n      scrollPdfTo,\r\n      loading,\r\n      error,\r\n      hasOcrResults\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.results {\r\n  padding: 20px;\r\n}\r\n\r\n.results-container {\r\n  display: flex;\r\n  gap: 20px;\r\n  height: 80vh;\r\n  margin-top: 20px;\r\n}\r\n\r\n.pdf-viewer {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  border: 1px solid #ddd;\r\n  background: #f9f9f9;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.pdf-pages {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.pdf-page {\r\n  max-width: 100%;\r\n  height: auto;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.latex-viewer {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  border: 1px solid #ddd;\r\n  padding: 15px;\r\n  font-family: 'Courier New', monospace;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n}\r\n\r\n.latex-viewer h3 {\r\n  margin-top: 0;\r\n  color: #333;\r\n  border-bottom: 2px solid #6a1b9a;\r\n  padding-bottom: 8px;\r\n}\r\n\r\n.latex-lines {\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.latex-line {\r\n  padding: 4px 8px;\r\n  cursor: pointer;\r\n  white-space: pre-wrap;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.latex-line:hover {\r\n  background: #e3f2fd;\r\n  border-left: 3px solid #2196f3;\r\n}\r\n\r\n.loading, .error, .no-results {\r\n  padding: 40px;\r\n  text-align: center;\r\n  font-size: 18px;\r\n  margin: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.loading {\r\n  color: #1976d2;\r\n  background: #e3f2fd;\r\n  border: 1px solid #bbdefb;\r\n}\r\n\r\n.error {\r\n  color: #d32f2f;\r\n  background: #ffebee;\r\n  border: 1px solid #d32f2f;\r\n}\r\n\r\n.no-results {\r\n  color: #f57c00;\r\n  background: #fff3e0;\r\n  border: 1px solid #ffb74d;\r\n}\r\n\r\n.no-results p:first-child {\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}