{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"results\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_4 = {\n  key: 2,\n  class: \"no-results\"\n};\nconst _hoisted_5 = {\n  key: 3,\n  class: \"results-container\"\n};\nconst _hoisted_6 = {\n  class: \"pdf-viewer\"\n};\nconst _hoisted_7 = {\n  ref: \"pdfContainer\",\n  class: \"pdf-pages\"\n};\nconst _hoisted_8 = {\n  class: \"latex-viewer\"\n};\nconst _hoisted_9 = {\n  class: \"latex-lines\"\n};\nconst _hoisted_10 = [\"onMouseover\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"OCR Results\", -1 /* CACHED */)), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Loading PDF...\")) : $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($setup.error), 1 /* TEXT */)) : !$setup.hasOcrResults ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _cache[0] || (_cache[0] = [_createElementVNode(\"p\", null, \"No PDF URL found\", -1 /* CACHED */), _createElementVNode(\"p\", null, \"Please upload a PDF file first to see OCR results\", -1 /* CACHED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createCommentVNode(\" 左边 PDF 渲染 \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, null, 512 /* NEED_PATCH */)]), _createCommentVNode(\" 右边 Nougat LaTeX 输出 \"), _createElementVNode(\"div\", _hoisted_8, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"Nougat LaTeX 输出：\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.latexLines, (line, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"latex-line\",\n      onMouseover: $event => $setup.scrollPdfTo(index)\n    }, _toDisplayString(line), 41 /* TEXT, PROPS, NEED_HYDRATION */, _hoisted_10);\n  }), 128 /* KEYED_FRAGMENT */))])])]))]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","$setup","loading","_hoisted_2","error","_hoisted_3","_toDisplayString","hasOcrResults","_hoisted_4","_cache","_hoisted_5","_createCommentVNode","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_Fragment","_renderList","latexLines","line","index","key","onMouseover","$event","scrollPdfTo","_hoisted_10"],"sources":["D:\\OCR\\ocr\\src\\views\\Results.vue"],"sourcesContent":["<template>\r\n  <div class=\"results\">\r\n    <h2>OCR Results</h2>\r\n\r\n    <div v-if=\"loading\" class=\"loading\">Loading PDF...</div>\r\n    <div v-else-if=\"error\" class=\"error\">{{ error }}</div>\r\n    <div v-else-if=\"!hasOcrResults\" class=\"no-results\">\r\n      <p>No PDF URL found</p>\r\n      <p>Please upload a PDF file first to see OCR results</p>\r\n    </div>\r\n    \r\n    <div v-else class=\"results-container\">\r\n      <!-- 左边 PDF 渲染 -->\r\n      <div class=\"pdf-viewer\">\r\n        <div ref=\"pdfContainer\" class=\"pdf-pages\"></div>\r\n      </div>\r\n\r\n      <!-- 右边 Nougat LaTeX 输出 -->\r\n      <div class=\"latex-viewer\">\r\n        <h3>Nougat LaTeX 输出：</h3>\r\n        <div class=\"latex-lines\">\r\n          <div\r\n            v-for=\"(line, index) in latexLines\"\r\n            :key=\"index\"\r\n            class=\"latex-line\"\r\n            @mouseover=\"scrollPdfTo(index)\"\r\n          >\r\n            {{ line }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport * as pdfjsLib from \"pdfjs-dist\";\r\n\r\n// 设置 PDF.js worker\r\npdfjsLib.GlobalWorkerOptions.workerSrc = \r\n  \"https://cdn.jsdelivr.net/npm/pdfjs-dist@3.4.120/build/pdf.worker.min.js\";\r\n\r\nexport default {\r\n  name: \"OcrResults\",\r\n  setup() {\r\n    const store = useStore();\r\n    const pdfContainer = ref(null);\r\n    const pdfDoc = ref(null);\r\n    const loading = ref(true);\r\n    const error = ref(null);\r\n\r\n    // 检查是否有 OCR 结果\r\n    const hasOcrResults = computed(() => {\r\n      return store.state.ocrResults && \r\n             store.state.ocrResults.pdfUrl && \r\n             store.state.ocrResults.text;\r\n    });\r\n\r\n    // LaTeX 按行拆分\r\n    const latexLines = computed(() => {\r\n      return store.state.ocrResults?.text\r\n        ? store.state.ocrResults.text.split(\"\\n\")\r\n        : [];\r\n    });\r\n\r\n    // 渲染 PDF 页\r\n    const renderPage = async (pageNum) => {\r\n      try {\r\n        const page = await pdfDoc.value.getPage(pageNum);\r\n        const viewport = page.getViewport({ scale: 1.5 });\r\n        \r\n        const canvas = document.createElement(\"canvas\");\r\n        const context = canvas.getContext(\"2d\");\r\n        canvas.width = viewport.width;\r\n        canvas.height = viewport.height;\r\n        canvas.className = \"pdf-page\";\r\n\r\n        const renderContext = {\r\n          canvasContext: context,\r\n          viewport: viewport\r\n        };\r\n\r\n        await page.render(renderContext).promise;\r\n        return canvas;\r\n      } catch (err) {\r\n        console.error(\"Error rendering page:\", err);\r\n        throw err;\r\n      }\r\n    };\r\n\r\n    // 渲染所有页面\r\n    const renderAllPages = async () => {\r\n      if (!pdfDoc.value || !pdfContainer.value) return;\r\n      \r\n      try {\r\n        pdfContainer.value.innerHTML = \"\";\r\n        \r\n        for (let i = 1; i <= pdfDoc.value.numPages; i++) {\r\n          const canvas = await renderPage(i);\r\n          pdfContainer.value.appendChild(canvas);\r\n          \r\n          // 添加页面分隔\r\n          if (i < pdfDoc.value.numPages) {\r\n            const divider = document.createElement(\"div\");\r\n            divider.style.height = \"20px\";\r\n            divider.style.backgroundColor = \"#f0f0f0\";\r\n            pdfContainer.value.appendChild(divider);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        error.value = \"Failed to render PDF pages\";\r\n        console.error(\"Render error:\", err);\r\n      }\r\n    };\r\n\r\n    // 鼠标悬停滚动 PDF\r\n    const scrollPdfTo = (lineIndex) => {\r\n      if (pdfContainer.value && latexLines.value.length > 0) {\r\n        const totalLines = latexLines.value.length;\r\n        const percent = lineIndex / totalLines;\r\n        pdfContainer.value.parentElement.scrollTop =\r\n          pdfContainer.value.parentElement.scrollHeight * percent;\r\n      }\r\n    };\r\n\r\n    // 加载 PDF\r\n    onMounted(async () => {\r\n      // 如果没有 OCR 结果，直接显示提示\r\n      if (!hasOcrResults.value) {\r\n        loading.value = false;\r\n        return;\r\n      }\r\n\r\n      const pdfUrl = store.state.ocrResults.pdfUrl;\r\n      \r\n      try {\r\n        loading.value = true;\r\n        \r\n        // 处理可能的相对路径\r\n        const effectiveUrl = pdfUrl.startsWith('http') \r\n          ? pdfUrl \r\n          : `${window.location.origin}${pdfUrl.startsWith('/') ? '' : '/'}${pdfUrl}`;\r\n        \r\n        console.log(\"Loading PDF from:\", effectiveUrl);\r\n        \r\n        const loadingTask = pdfjsLib.getDocument(effectiveUrl);\r\n        pdfDoc.value = await loadingTask.promise;\r\n        \r\n        await renderAllPages();\r\n        loading.value = false;\r\n        \r\n      } catch (err) {\r\n        console.error(\"PDF loading failed:\", err);\r\n        error.value = `Failed to load PDF: ${err.message}`;\r\n        loading.value = false;\r\n      }\r\n    });\r\n\r\n    return {\r\n      pdfContainer,\r\n      latexLines,\r\n      scrollPdfTo,\r\n      loading,\r\n      error,\r\n      hasOcrResults\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.results {\r\n  padding: 20px;\r\n}\r\n\r\n.results-container {\r\n  display: flex;\r\n  gap: 20px;\r\n  height: 80vh;\r\n  margin-top: 20px;\r\n}\r\n\r\n.pdf-viewer {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  border: 1px solid #ddd;\r\n  background: #f9f9f9;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.pdf-pages {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.pdf-page {\r\n  max-width: 100%;\r\n  height: auto;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.latex-viewer {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  border: 1px solid #ddd;\r\n  padding: 15px;\r\n  font-family: 'Courier New', monospace;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n}\r\n\r\n.latex-viewer h3 {\r\n  margin-top: 0;\r\n  color: #333;\r\n  border-bottom: 2px solid #6a1b9a;\r\n  padding-bottom: 8px;\r\n}\r\n\r\n.latex-lines {\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.latex-line {\r\n  padding: 4px 8px;\r\n  cursor: pointer;\r\n  white-space: pre-wrap;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.latex-line:hover {\r\n  background: #e3f2fd;\r\n  border-left: 3px solid #2196f3;\r\n}\r\n\r\n.loading, .error, .no-results {\r\n  padding: 40px;\r\n  text-align: center;\r\n  font-size: 18px;\r\n  margin: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.loading {\r\n  color: #1976d2;\r\n  background: #e3f2fd;\r\n  border: 1px solid #bbdefb;\r\n}\r\n\r\n.error {\r\n  color: #d32f2f;\r\n  background: #ffebee;\r\n  border: 1px solid #d32f2f;\r\n}\r\n\r\n.no-results {\r\n  color: #f57c00;\r\n  background: #fff3e0;\r\n  border: 1px solid #ffb74d;\r\n}\r\n\r\n.no-results p:first-child {\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAS;;;EAGEA,KAAK,EAAC;;;;EACHA,KAAK,EAAC;;;;EACGA,KAAK,EAAC;;;;EAK1BA,KAAK,EAAC;;;EAEXA,KAAK,EAAC;AAAY;;EAChBC,GAAG,EAAC,cAAc;EAACD,KAAK,EAAC;;;EAI3BA,KAAK,EAAC;AAAc;;EAElBA,KAAK,EAAC;AAAa;;;uBAnB9BE,mBAAA,CA+BM,OA/BNC,UA+BM,G,0BA9BJC,mBAAA,CAAoB,YAAhB,aAAW,qBAEJC,MAAA,CAAAC,OAAO,I,cAAlBJ,mBAAA,CAAwD,OAAxDK,UAAwD,EAApB,gBAAc,KAClCF,MAAA,CAAAG,KAAK,I,cAArBN,mBAAA,CAAsD,OAAtDO,UAAsD,EAAAC,gBAAA,CAAdL,MAAA,CAAAG,KAAK,oB,CAC5BH,MAAA,CAAAM,aAAa,I,cAA9BT,mBAAA,CAGM,OAHNU,UAGM,EAAAC,MAAA,QAAAA,MAAA,OAFJT,mBAAA,CAAuB,WAApB,kBAAgB,oBACnBA,mBAAA,CAAwD,WAArD,mDAAiD,mB,qBAGtDF,mBAAA,CAoBM,OApBNY,UAoBM,GAnBJC,mBAAA,eAAkB,EAClBX,mBAAA,CAEM,OAFNY,UAEM,GADJZ,mBAAA,CAAgD,OAAhDa,UAAgD,8B,GAGlDF,mBAAA,wBAA2B,EAC3BX,mBAAA,CAYM,OAZNc,UAYM,G,0BAXJd,mBAAA,CAAyB,YAArB,kBAAgB,qBACpBA,mBAAA,CASM,OATNe,UASM,I,kBARJjB,mBAAA,CAOMkB,SAAA,QAAAC,WAAA,CANoBhB,MAAA,CAAAiB,UAAU,GAA1BC,IAAI,EAAEC,KAAK;yBADrBtB,mBAAA,CAOM;MALHuB,GAAG,EAAED,KAAK;MACXxB,KAAK,EAAC,YAAY;MACjB0B,WAAS,EAAAC,MAAA,IAAEtB,MAAA,CAAAuB,WAAW,CAACJ,KAAK;wBAE1BD,IAAI,yCAAAM,WAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}